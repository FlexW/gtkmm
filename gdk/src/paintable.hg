/* Copyright (C) 2018 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see <http://www.gnu.org/licenses/>.
 */

#include <glibmm/interface.h>

_DEFS(gdkmm,gdk)
_PINCLUDE(glibmm/private/interface_p.h)

#ifndef DOXYGEN_SHOULD_SKIP_THIS
extern "C"
{
typedef struct _GtkPaintableInterface GtkPaintableInterface;
}
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

namespace Gdk
{
class Snapshot;

/** An interface for a paintable region.
 *
 *
 * @newin{3,94}
 */
class Paintable : public Glib::Interface
{
  _CLASS_INTERFACE(Paintable, GdkPaintable, GDK_PAINTABLE, GtkPaintableInterface)

public:
  _WRAP_ENUM(Flags, GdkPaintableFlags)

  _WRAP_METHOD(void snapshot(const Glib::RefPtr<Gdk::Snapshot>& snapshot, double width, double height), gdk_paintable_snapshot)
  _WRAP_METHOD(Glib::RefPtr<const Paintable> get_current_image() const, gdk_paintable_get_current_image)
  _WRAP_METHOD(Flags get_flags() const, gdk_paintable_get_flags)
  _WRAP_METHOD(int get_intrinsic_width() const, gdk_paintable_get_intrinsic_width)
  _WRAP_METHOD(int get_intrinsic_height() const, gdk_paintable_get_intrinsic_height)
  _WRAP_METHOD(double get_intrinsic_aspect_ratio() const, gdk_paintable_get_intrinsic_aspect_ratio)
  _WRAP_METHOD(void compute_concrete_size(double specified_width, double specified_height,
    double default_width, double default_height,
    double& concrete_width, double& concrete_height) const, gdk_paintable_compute_concrete_size)
  _WRAP_METHOD(void invalidate_contents(), gdk_paintable_invalidate_contents)
  _WRAP_METHOD(void invalidate_size(), gdk_paintable_invalidate_size)

  // no_default_handler because the wrapped C signals have no default handlers.
  _WRAP_SIGNAL(void invalidate_contents(), "invalidate-contents", no_default_handler)
  _WRAP_SIGNAL(void invalidate_size(), "invalidate-size", no_default_handler)

  //TODO: Add vfuncs

  // There are no properties.
};

} // namespace Gdk
