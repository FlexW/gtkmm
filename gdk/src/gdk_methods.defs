;; -*- scheme -*-
; object definitions ...
(define-object ContentProvider
  (in-module "Gdk")
  (parent "GObject")
  (c-name "GdkContentProvider")
  (gtype-id "GDK_TYPE_CONTENT_PROVIDER")
)

(define-object FrameClockIdle
  (in-module "Gdk")
  (parent "GdkFrameClock")
  (c-name "GdkFrameClockIdle")
  (gtype-id "GDK_TYPE_FRAME_CLOCK_IDLE")
)

(define-object WindowImpl
  (in-module "Gdk")
  (parent "GObject")
  (c-name "GdkWindowImpl")
  (gtype-id "GDK_TYPE_WINDOW_IMPL")
)

;; Enumerations and flags ...

(define-enum InputSource
  (in-module "Gdk")
  (c-name "GdkInputSource")
  (gtype-id "GDK_TYPE_INPUT_SOURCE")
  (values
    '("mouse" "GDK_SOURCE_MOUSE")
    '("pen" "GDK_SOURCE_PEN")
    '("eraser" "GDK_SOURCE_ERASER")
    '("cursor" "GDK_SOURCE_CURSOR")
    '("keyboard" "GDK_SOURCE_KEYBOARD")
    '("touchscreen" "GDK_SOURCE_TOUCHSCREEN")
    '("touchpad" "GDK_SOURCE_TOUCHPAD")
    '("trackpoint" "GDK_SOURCE_TRACKPOINT")
    '("tablet-pad" "GDK_SOURCE_TABLET_PAD")
  )
)

(define-enum InputMode
  (in-module "Gdk")
  (c-name "GdkInputMode")
  (gtype-id "GDK_TYPE_INPUT_MODE")
  (values
    '("disabled" "GDK_MODE_DISABLED")
    '("screen" "GDK_MODE_SCREEN")
    '("window" "GDK_MODE_WINDOW")
  )
)

(define-enum DeviceType
  (in-module "Gdk")
  (c-name "GdkDeviceType")
  (gtype-id "GDK_TYPE_DEVICE_TYPE")
  (values
    '("master" "GDK_DEVICE_TYPE_MASTER")
    '("slave" "GDK_DEVICE_TYPE_SLAVE")
    '("floating" "GDK_DEVICE_TYPE_FLOATING")
  )
)

(define-enum DevicePadFeature
  (in-module "Gdk")
  (c-name "GdkDevicePadFeature")
  (gtype-id "GDK_TYPE_DEVICE_PAD_FEATURE")
  (values
    '("button" "GDK_DEVICE_PAD_FEATURE_BUTTON")
    '("ring" "GDK_DEVICE_PAD_FEATURE_RING")
    '("strip" "GDK_DEVICE_PAD_FEATURE_STRIP")
  )
)

(define-enum DeviceToolType
  (in-module "Gdk")
  (c-name "GdkDeviceToolType")
  (gtype-id "GDK_TYPE_DEVICE_TOOL_TYPE")
  (values
    '("unknown" "GDK_DEVICE_TOOL_TYPE_UNKNOWN")
    '("pen" "GDK_DEVICE_TOOL_TYPE_PEN")
    '("eraser" "GDK_DEVICE_TOOL_TYPE_ERASER")
    '("brush" "GDK_DEVICE_TOOL_TYPE_BRUSH")
    '("pencil" "GDK_DEVICE_TOOL_TYPE_PENCIL")
    '("airbrush" "GDK_DEVICE_TOOL_TYPE_AIRBRUSH")
    '("mouse" "GDK_DEVICE_TOOL_TYPE_MOUSE")
    '("lens" "GDK_DEVICE_TOOL_TYPE_LENS")
  )
)

(define-flags DragAction
  (in-module "Gdk")
  (c-name "GdkDragAction")
  (gtype-id "GDK_TYPE_DRAG_ACTION")
  (values
    '("default" "GDK_ACTION_DEFAULT")
    '("copy" "GDK_ACTION_COPY")
    '("move" "GDK_ACTION_MOVE")
    '("link" "GDK_ACTION_LINK")
    '("private" "GDK_ACTION_PRIVATE")
    '("ask" "GDK_ACTION_ASK")
  )
)

(define-enum DragCancelReason
  (in-module "Gdk")
  (c-name "GdkDragCancelReason")
  (gtype-id "GDK_TYPE_DRAG_CANCEL_REASON")
  (values
    '("no-target" "GDK_DRAG_CANCEL_NO_TARGET")
    '("user-cancelled" "GDK_DRAG_CANCEL_USER_CANCELLED")
    '("error" "GDK_DRAG_CANCEL_ERROR")
  )
)

(define-enum FilterReturn
  (in-module "Gdk")
  (c-name "GdkFilterReturn")
  (gtype-id "GDK_TYPE_FILTER_RETURN")
  (values
    '("continue" "GDK_FILTER_CONTINUE")
    '("translate" "GDK_FILTER_TRANSLATE")
    '("remove" "GDK_FILTER_REMOVE")
  )
)

(define-enum EventType
  (in-module "Gdk")
  (c-name "GdkEventType")
  (gtype-id "GDK_TYPE_EVENT_TYPE")
  (values
    '("nothing" "GDK_NOTHING")
    '("delete" "GDK_DELETE")
    '("destroy" "GDK_DESTROY")
    '("expose" "GDK_EXPOSE")
    '("motion-notify" "GDK_MOTION_NOTIFY")
    '("button-press" "GDK_BUTTON_PRESS")
    '("button-release" "GDK_BUTTON_RELEASE")
    '("key-press" "GDK_KEY_PRESS")
    '("key-release" "GDK_KEY_RELEASE")
    '("enter-notify" "GDK_ENTER_NOTIFY")
    '("leave-notify" "GDK_LEAVE_NOTIFY")
    '("focus-change" "GDK_FOCUS_CHANGE")
    '("configure" "GDK_CONFIGURE")
    '("map" "GDK_MAP")
    '("unmap" "GDK_UNMAP")
    '("proximity-in" "GDK_PROXIMITY_IN")
    '("proximity-out" "GDK_PROXIMITY_OUT")
    '("drag-enter" "GDK_DRAG_ENTER")
    '("drag-leave" "GDK_DRAG_LEAVE")
    '("drag-motion" "GDK_DRAG_MOTION")
    '("drop-start" "GDK_DROP_START")
    '("scroll" "GDK_SCROLL")
    '("grab-broken" "GDK_GRAB_BROKEN")
    '("touch-begin" "GDK_TOUCH_BEGIN")
    '("touch-update" "GDK_TOUCH_UPDATE")
    '("touch-end" "GDK_TOUCH_END")
    '("touch-cancel" "GDK_TOUCH_CANCEL")
    '("touchpad-swipe" "GDK_TOUCHPAD_SWIPE")
    '("touchpad-pinch" "GDK_TOUCHPAD_PINCH")
    '("pad-button-press" "GDK_PAD_BUTTON_PRESS")
    '("pad-button-release" "GDK_PAD_BUTTON_RELEASE")
    '("pad-ring" "GDK_PAD_RING")
    '("pad-strip" "GDK_PAD_STRIP")
    '("pad-group-mode" "GDK_PAD_GROUP_MODE")
    '("event-last" "GDK_EVENT_LAST")
  )
)

(define-enum TouchpadGesturePhase
  (in-module "Gdk")
  (c-name "GdkTouchpadGesturePhase")
  (gtype-id "GDK_TYPE_TOUCHPAD_GESTURE_PHASE")
  (values
    '("begin" "GDK_TOUCHPAD_GESTURE_PHASE_BEGIN")
    '("update" "GDK_TOUCHPAD_GESTURE_PHASE_UPDATE")
    '("end" "GDK_TOUCHPAD_GESTURE_PHASE_END")
    '("cancel" "GDK_TOUCHPAD_GESTURE_PHASE_CANCEL")
  )
)

(define-enum ScrollDirection
  (in-module "Gdk")
  (c-name "GdkScrollDirection")
  (gtype-id "GDK_TYPE_SCROLL_DIRECTION")
  (values
    '("up" "GDK_SCROLL_UP")
    '("down" "GDK_SCROLL_DOWN")
    '("left" "GDK_SCROLL_LEFT")
    '("right" "GDK_SCROLL_RIGHT")
    '("smooth" "GDK_SCROLL_SMOOTH")
  )
)

(define-enum NotifyType
  (in-module "Gdk")
  (c-name "GdkNotifyType")
  (gtype-id "GDK_TYPE_NOTIFY_TYPE")
  (values
    '("ancestor" "GDK_NOTIFY_ANCESTOR")
    '("virtual" "GDK_NOTIFY_VIRTUAL")
    '("inferior" "GDK_NOTIFY_INFERIOR")
    '("nonlinear" "GDK_NOTIFY_NONLINEAR")
    '("nonlinear-virtual" "GDK_NOTIFY_NONLINEAR_VIRTUAL")
    '("unknown" "GDK_NOTIFY_UNKNOWN")
  )
)

(define-enum CrossingMode
  (in-module "Gdk")
  (c-name "GdkCrossingMode")
  (gtype-id "GDK_TYPE_CROSSING_MODE")
  (values
    '("normal" "GDK_CROSSING_NORMAL")
    '("grab" "GDK_CROSSING_GRAB")
    '("ungrab" "GDK_CROSSING_UNGRAB")
    '("gtk-grab" "GDK_CROSSING_GTK_GRAB")
    '("gtk-ungrab" "GDK_CROSSING_GTK_UNGRAB")
    '("state-changed" "GDK_CROSSING_STATE_CHANGED")
    '("touch-begin" "GDK_CROSSING_TOUCH_BEGIN")
    '("touch-end" "GDK_CROSSING_TOUCH_END")
    '("device-switch" "GDK_CROSSING_DEVICE_SWITCH")
  )
)

(define-flags FrameClockPhase
  (in-module "Gdk")
  (c-name "GdkFrameClockPhase")
  (gtype-id "GDK_TYPE_FRAME_CLOCK_PHASE")
  (values
    '("none" "GDK_FRAME_CLOCK_PHASE_NONE")
    '("flush-events" "GDK_FRAME_CLOCK_PHASE_FLUSH_EVENTS")
    '("before-paint" "GDK_FRAME_CLOCK_PHASE_BEFORE_PAINT")
    '("update" "GDK_FRAME_CLOCK_PHASE_UPDATE")
    '("layout" "GDK_FRAME_CLOCK_PHASE_LAYOUT")
    '("paint" "GDK_FRAME_CLOCK_PHASE_PAINT")
    '("resume-events" "GDK_FRAME_CLOCK_PHASE_RESUME_EVENTS")
    '("after-paint" "GDK_FRAME_CLOCK_PHASE_AFTER_PAINT")
  )
)

(define-enum SubpixelLayout
  (in-module "Gdk")
  (c-name "GdkSubpixelLayout")
  (gtype-id "GDK_TYPE_SUBPIXEL_LAYOUT")
  (values
    '("unknown" "GDK_SUBPIXEL_LAYOUT_UNKNOWN")
    '("none" "GDK_SUBPIXEL_LAYOUT_NONE")
    '("horizontal-rgb" "GDK_SUBPIXEL_LAYOUT_HORIZONTAL_RGB")
    '("horizontal-bgr" "GDK_SUBPIXEL_LAYOUT_HORIZONTAL_BGR")
    '("vertical-rgb" "GDK_SUBPIXEL_LAYOUT_VERTICAL_RGB")
    '("vertical-bgr" "GDK_SUBPIXEL_LAYOUT_VERTICAL_BGR")
  )
)

(define-flags SeatCapabilities
  (in-module "Gdk")
  (c-name "GdkSeatCapabilities")
  (gtype-id "GDK_TYPE_SEAT_CAPABILITIES")
  (values
    '("none" "GDK_SEAT_CAPABILITY_NONE")
    '("pointer" "GDK_SEAT_CAPABILITY_POINTER")
    '("touch" "GDK_SEAT_CAPABILITY_TOUCH")
    '("tablet-stylus" "GDK_SEAT_CAPABILITY_TABLET_STYLUS")
    '("keyboard" "GDK_SEAT_CAPABILITY_KEYBOARD")
    '("tablet-pad" "GDK_SEAT_CAPABILITY_TABLET_PAD")
    '("all-pointing" "GDK_SEAT_CAPABILITY_ALL_POINTING")
    '("all" "GDK_SEAT_CAPABILITY_ALL")
  )
)

(define-enum ByteOrder
  (in-module "Gdk")
  (c-name "GdkByteOrder")
  (gtype-id "GDK_TYPE_BYTE_ORDER")
  (values
    '("lsb-first" "GDK_LSB_FIRST")
    '("msb-first" "GDK_MSB_FIRST")
  )
)

(define-flags ModifierType
  (in-module "Gdk")
  (c-name "GdkModifierType")
  (gtype-id "GDK_TYPE_MODIFIER_TYPE")
  (values
    '("shift-mask" "GDK_SHIFT_MASK")
    '("lock-mask" "GDK_LOCK_MASK")
    '("control-mask" "GDK_CONTROL_MASK")
    '("mod1-mask" "GDK_MOD1_MASK")
    '("mod2-mask" "GDK_MOD2_MASK")
    '("mod3-mask" "GDK_MOD3_MASK")
    '("mod4-mask" "GDK_MOD4_MASK")
    '("mod5-mask" "GDK_MOD5_MASK")
    '("button1-mask" "GDK_BUTTON1_MASK")
    '("button2-mask" "GDK_BUTTON2_MASK")
    '("button3-mask" "GDK_BUTTON3_MASK")
    '("button4-mask" "GDK_BUTTON4_MASK")
    '("button5-mask" "GDK_BUTTON5_MASK")
    '("modifier-reserved-13-mask" "GDK_MODIFIER_RESERVED_13_MASK")
    '("modifier-reserved-14-mask" "GDK_MODIFIER_RESERVED_14_MASK")
    '("modifier-reserved-15-mask" "GDK_MODIFIER_RESERVED_15_MASK")
    '("modifier-reserved-16-mask" "GDK_MODIFIER_RESERVED_16_MASK")
    '("modifier-reserved-17-mask" "GDK_MODIFIER_RESERVED_17_MASK")
    '("modifier-reserved-18-mask" "GDK_MODIFIER_RESERVED_18_MASK")
    '("modifier-reserved-19-mask" "GDK_MODIFIER_RESERVED_19_MASK")
    '("modifier-reserved-20-mask" "GDK_MODIFIER_RESERVED_20_MASK")
    '("modifier-reserved-21-mask" "GDK_MODIFIER_RESERVED_21_MASK")
    '("modifier-reserved-22-mask" "GDK_MODIFIER_RESERVED_22_MASK")
    '("modifier-reserved-23-mask" "GDK_MODIFIER_RESERVED_23_MASK")
    '("modifier-reserved-24-mask" "GDK_MODIFIER_RESERVED_24_MASK")
    '("modifier-reserved-25-mask" "GDK_MODIFIER_RESERVED_25_MASK")
    '("super-mask" "GDK_SUPER_MASK")
    '("hyper-mask" "GDK_HYPER_MASK")
    '("meta-mask" "GDK_META_MASK")
    '("modifier-reserved-29-mask" "GDK_MODIFIER_RESERVED_29_MASK")
    '("release-mask" "GDK_RELEASE_MASK")
    '("modifier-mask" "GDK_MODIFIER_MASK")
  )
)

(define-enum ModifierIntent
  (in-module "Gdk")
  (c-name "GdkModifierIntent")
  (gtype-id "GDK_TYPE_MODIFIER_INTENT")
  (values
    '("primary-accelerator" "GDK_MODIFIER_INTENT_PRIMARY_ACCELERATOR")
    '("context-menu" "GDK_MODIFIER_INTENT_CONTEXT_MENU")
    '("extend-selection" "GDK_MODIFIER_INTENT_EXTEND_SELECTION")
    '("modify-selection" "GDK_MODIFIER_INTENT_MODIFY_SELECTION")
    '("no-text-input" "GDK_MODIFIER_INTENT_NO_TEXT_INPUT")
    '("shift-group" "GDK_MODIFIER_INTENT_SHIFT_GROUP")
    '("default-mod-mask" "GDK_MODIFIER_INTENT_DEFAULT_MOD_MASK")
  )
)

(define-enum GrabStatus
  (in-module "Gdk")
  (c-name "GdkGrabStatus")
  (gtype-id "GDK_TYPE_GRAB_STATUS")
  (values
    '("success" "GDK_GRAB_SUCCESS")
    '("already-grabbed" "GDK_GRAB_ALREADY_GRABBED")
    '("invalid-time" "GDK_GRAB_INVALID_TIME")
    '("not-viewable" "GDK_GRAB_NOT_VIEWABLE")
    '("frozen" "GDK_GRAB_FROZEN")
    '("failed" "GDK_GRAB_FAILED")
  )
)

(define-enum GrabOwnership
  (in-module "Gdk")
  (c-name "GdkGrabOwnership")
  (gtype-id "GDK_TYPE_GRAB_OWNERSHIP")
  (values
    '("none" "GDK_OWNERSHIP_NONE")
    '("window" "GDK_OWNERSHIP_WINDOW")
    '("application" "GDK_OWNERSHIP_APPLICATION")
  )
)

(define-flags EventMask
  (in-module "Gdk")
  (c-name "GdkEventMask")
  (gtype-id "GDK_TYPE_EVENT_MASK")
  (values
    '("exposure-mask" "GDK_EXPOSURE_MASK")
    '("pointer-motion-mask" "GDK_POINTER_MOTION_MASK")
    '("button-motion-mask" "GDK_BUTTON_MOTION_MASK")
    '("button1-motion-mask" "GDK_BUTTON1_MOTION_MASK")
    '("button2-motion-mask" "GDK_BUTTON2_MOTION_MASK")
    '("button3-motion-mask" "GDK_BUTTON3_MOTION_MASK")
    '("button-press-mask" "GDK_BUTTON_PRESS_MASK")
    '("button-release-mask" "GDK_BUTTON_RELEASE_MASK")
    '("key-press-mask" "GDK_KEY_PRESS_MASK")
    '("key-release-mask" "GDK_KEY_RELEASE_MASK")
    '("enter-notify-mask" "GDK_ENTER_NOTIFY_MASK")
    '("leave-notify-mask" "GDK_LEAVE_NOTIFY_MASK")
    '("focus-change-mask" "GDK_FOCUS_CHANGE_MASK")
    '("structure-mask" "GDK_STRUCTURE_MASK")
    '("property-change-mask" "GDK_PROPERTY_CHANGE_MASK")
    '("proximity-in-mask" "GDK_PROXIMITY_IN_MASK")
    '("proximity-out-mask" "GDK_PROXIMITY_OUT_MASK")
    '("substructure-mask" "GDK_SUBSTRUCTURE_MASK")
    '("scroll-mask" "GDK_SCROLL_MASK")
    '("touch-mask" "GDK_TOUCH_MASK")
    '("smooth-scroll-mask" "GDK_SMOOTH_SCROLL_MASK")
    '("touchpad-gesture-mask" "GDK_TOUCHPAD_GESTURE_MASK")
    '("tablet-pad-mask" "GDK_TABLET_PAD_MASK")
    '("all-events-mask" "GDK_ALL_EVENTS_MASK")
  )
)

(define-enum GLError
  (in-module "Gdk")
  (c-name "GdkGLError")
  (gtype-id "GDK_TYPE_GL_ERROR")
  (values
    '("not-available" "GDK_GL_ERROR_NOT_AVAILABLE")
    '("unsupported-format" "GDK_GL_ERROR_UNSUPPORTED_FORMAT")
    '("unsupported-profile" "GDK_GL_ERROR_UNSUPPORTED_PROFILE")
    '("compilation-failed" "GDK_GL_ERROR_COMPILATION_FAILED")
    '("link-failed" "GDK_GL_ERROR_LINK_FAILED")
  )
)

(define-enum VulkanError
  (in-module "Gdk")
  (c-name "GdkVulkanError")
  (gtype-id "GDK_TYPE_VULKAN_ERROR")
  (values
    '("unsupported" "GDK_VULKAN_ERROR_UNSUPPORTED")
    '("not-available" "GDK_VULKAN_ERROR_NOT_AVAILABLE")
  )
)

(define-enum WindowTypeHint
  (in-module "Gdk")
  (c-name "GdkWindowTypeHint")
  (gtype-id "GDK_TYPE_WINDOW_TYPE_HINT")
  (values
    '("normal" "GDK_WINDOW_TYPE_HINT_NORMAL")
    '("dialog" "GDK_WINDOW_TYPE_HINT_DIALOG")
    '("menu" "GDK_WINDOW_TYPE_HINT_MENU")
    '("toolbar" "GDK_WINDOW_TYPE_HINT_TOOLBAR")
    '("splashscreen" "GDK_WINDOW_TYPE_HINT_SPLASHSCREEN")
    '("utility" "GDK_WINDOW_TYPE_HINT_UTILITY")
    '("dock" "GDK_WINDOW_TYPE_HINT_DOCK")
    '("desktop" "GDK_WINDOW_TYPE_HINT_DESKTOP")
    '("dropdown-menu" "GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU")
    '("popup-menu" "GDK_WINDOW_TYPE_HINT_POPUP_MENU")
    '("tooltip" "GDK_WINDOW_TYPE_HINT_TOOLTIP")
    '("notification" "GDK_WINDOW_TYPE_HINT_NOTIFICATION")
    '("combo" "GDK_WINDOW_TYPE_HINT_COMBO")
    '("dnd" "GDK_WINDOW_TYPE_HINT_DND")
  )
)

(define-enum AxisUse
  (in-module "Gdk")
  (c-name "GdkAxisUse")
  (gtype-id "GDK_TYPE_AXIS_USE")
  (values
    '("ignore" "GDK_AXIS_IGNORE")
    '("x" "GDK_AXIS_X")
    '("y" "GDK_AXIS_Y")
    '("pressure" "GDK_AXIS_PRESSURE")
    '("xtilt" "GDK_AXIS_XTILT")
    '("ytilt" "GDK_AXIS_YTILT")
    '("wheel" "GDK_AXIS_WHEEL")
    '("distance" "GDK_AXIS_DISTANCE")
    '("rotation" "GDK_AXIS_ROTATION")
    '("slider" "GDK_AXIS_SLIDER")
    '("last" "GDK_AXIS_LAST")
  )
)

(define-flags AxisFlags
  (in-module "Gdk")
  (c-name "GdkAxisFlags")
  (gtype-id "GDK_TYPE_AXIS_FLAGS")
  (values
    '("x" "GDK_AXIS_FLAG_X")
    '("y" "GDK_AXIS_FLAG_Y")
    '("pressure" "GDK_AXIS_FLAG_PRESSURE")
    '("xtilt" "GDK_AXIS_FLAG_XTILT")
    '("ytilt" "GDK_AXIS_FLAG_YTILT")
    '("wheel" "GDK_AXIS_FLAG_WHEEL")
    '("distance" "GDK_AXIS_FLAG_DISTANCE")
    '("rotation" "GDK_AXIS_FLAG_ROTATION")
    '("slider" "GDK_AXIS_FLAG_SLIDER")
  )
)

(define-enum WindowType
  (in-module "Gdk")
  (c-name "GdkWindowType")
  (gtype-id "GDK_TYPE_WINDOW_TYPE")
  (values
    '("root" "GDK_WINDOW_ROOT")
    '("toplevel" "GDK_WINDOW_TOPLEVEL")
    '("child" "GDK_WINDOW_CHILD")
    '("temp" "GDK_WINDOW_TEMP")
    '("foreign" "GDK_WINDOW_FOREIGN")
    '("subsurface" "GDK_WINDOW_SUBSURFACE")
  )
)

(define-flags WindowHints
  (in-module "Gdk")
  (c-name "GdkWindowHints")
  (gtype-id "GDK_TYPE_WINDOW_HINTS")
  (values
    '("pos" "GDK_HINT_POS")
    '("min-size" "GDK_HINT_MIN_SIZE")
    '("max-size" "GDK_HINT_MAX_SIZE")
    '("base-size" "GDK_HINT_BASE_SIZE")
    '("aspect" "GDK_HINT_ASPECT")
    '("resize-inc" "GDK_HINT_RESIZE_INC")
    '("win-gravity" "GDK_HINT_WIN_GRAVITY")
    '("user-pos" "GDK_HINT_USER_POS")
    '("user-size" "GDK_HINT_USER_SIZE")
  )
)

(define-flags WMDecoration
  (in-module "Gdk")
  (c-name "GdkWMDecoration")
  (gtype-id "GDK_TYPE_WM_DECORATION")
  (values
    '("all" "GDK_DECOR_ALL")
    '("border" "GDK_DECOR_BORDER")
    '("resizeh" "GDK_DECOR_RESIZEH")
    '("title" "GDK_DECOR_TITLE")
    '("menu" "GDK_DECOR_MENU")
    '("minimize" "GDK_DECOR_MINIMIZE")
    '("maximize" "GDK_DECOR_MAXIMIZE")
  )
)

(define-flags WMFunction
  (in-module "Gdk")
  (c-name "GdkWMFunction")
  (gtype-id "GDK_TYPE_WM_FUNCTION")
  (values
    '("all" "GDK_FUNC_ALL")
    '("resize" "GDK_FUNC_RESIZE")
    '("move" "GDK_FUNC_MOVE")
    '("minimize" "GDK_FUNC_MINIMIZE")
    '("maximize" "GDK_FUNC_MAXIMIZE")
    '("close" "GDK_FUNC_CLOSE")
  )
)

(define-enum Gravity
  (in-module "Gdk")
  (c-name "GdkGravity")
  (gtype-id "GDK_TYPE_GRAVITY")
  (values
    '("north-west" "GDK_GRAVITY_NORTH_WEST")
    '("north" "GDK_GRAVITY_NORTH")
    '("north-east" "GDK_GRAVITY_NORTH_EAST")
    '("west" "GDK_GRAVITY_WEST")
    '("center" "GDK_GRAVITY_CENTER")
    '("east" "GDK_GRAVITY_EAST")
    '("south-west" "GDK_GRAVITY_SOUTH_WEST")
    '("south" "GDK_GRAVITY_SOUTH")
    '("south-east" "GDK_GRAVITY_SOUTH_EAST")
    '("static" "GDK_GRAVITY_STATIC")
  )
)

(define-flags AnchorHints
  (in-module "Gdk")
  (c-name "GdkAnchorHints")
  (gtype-id "GDK_TYPE_ANCHOR_HINTS")
  (values
    '("flip-x" "GDK_ANCHOR_FLIP_X")
    '("flip-y" "GDK_ANCHOR_FLIP_Y")
    '("slide-x" "GDK_ANCHOR_SLIDE_X")
    '("slide-y" "GDK_ANCHOR_SLIDE_Y")
    '("resize-x" "GDK_ANCHOR_RESIZE_X")
    '("resize-y" "GDK_ANCHOR_RESIZE_Y")
    '("flip" "GDK_ANCHOR_FLIP")
    '("slide" "GDK_ANCHOR_SLIDE")
    '("resize" "GDK_ANCHOR_RESIZE")
  )
)

(define-enum WindowEdge
  (in-module "Gdk")
  (c-name "GdkWindowEdge")
  (gtype-id "GDK_TYPE_WINDOW_EDGE")
  (values
    '("north-west" "GDK_WINDOW_EDGE_NORTH_WEST")
    '("north" "GDK_WINDOW_EDGE_NORTH")
    '("north-east" "GDK_WINDOW_EDGE_NORTH_EAST")
    '("west" "GDK_WINDOW_EDGE_WEST")
    '("east" "GDK_WINDOW_EDGE_EAST")
    '("south-west" "GDK_WINDOW_EDGE_SOUTH_WEST")
    '("south" "GDK_WINDOW_EDGE_SOUTH")
    '("south-east" "GDK_WINDOW_EDGE_SOUTH_EAST")
  )
)

(define-enum FullscreenMode
  (in-module "Gdk")
  (c-name "GdkFullscreenMode")
  (gtype-id "GDK_TYPE_FULLSCREEN_MODE")
  (values
    '("current-monitor" "GDK_FULLSCREEN_ON_CURRENT_MONITOR")
    '("all-monitors" "GDK_FULLSCREEN_ON_ALL_MONITORS")
  )
)

(define-flags WindowState
  (in-module "Gdk")
  (c-name "GdkWindowState")
  (gtype-id "GDK_TYPE_WINDOW_STATE")
  (values
    '("withdrawn" "GDK_WINDOW_STATE_WITHDRAWN")
    '("iconified" "GDK_WINDOW_STATE_ICONIFIED")
    '("maximized" "GDK_WINDOW_STATE_MAXIMIZED")
    '("sticky" "GDK_WINDOW_STATE_STICKY")
    '("fullscreen" "GDK_WINDOW_STATE_FULLSCREEN")
    '("above" "GDK_WINDOW_STATE_ABOVE")
    '("below" "GDK_WINDOW_STATE_BELOW")
    '("focused" "GDK_WINDOW_STATE_FOCUSED")
    '("tiled" "GDK_WINDOW_STATE_TILED")
    '("top-tiled" "GDK_WINDOW_STATE_TOP_TILED")
    '("top-resizable" "GDK_WINDOW_STATE_TOP_RESIZABLE")
    '("right-tiled" "GDK_WINDOW_STATE_RIGHT_TILED")
    '("right-resizable" "GDK_WINDOW_STATE_RIGHT_RESIZABLE")
    '("bottom-tiled" "GDK_WINDOW_STATE_BOTTOM_TILED")
    '("bottom-resizable" "GDK_WINDOW_STATE_BOTTOM_RESIZABLE")
    '("left-tiled" "GDK_WINDOW_STATE_LEFT_TILED")
    '("left-resizable" "GDK_WINDOW_STATE_LEFT_RESIZABLE")
  )
)


;; From gdkapplaunchcontext.h

(define-method set_desktop
  (of-object "GdkAppLaunchContext")
  (c-name "gdk_app_launch_context_set_desktop")
  (return-type "none")
  (parameters
    '("gint" "desktop")
  )
)

(define-method set_timestamp
  (of-object "GdkAppLaunchContext")
  (c-name "gdk_app_launch_context_set_timestamp")
  (return-type "none")
  (parameters
    '("guint32" "timestamp")
  )
)

(define-method set_icon
  (of-object "GdkAppLaunchContext")
  (c-name "gdk_app_launch_context_set_icon")
  (return-type "none")
  (parameters
    '("GIcon*" "icon")
  )
)

(define-method set_icon_name
  (of-object "GdkAppLaunchContext")
  (c-name "gdk_app_launch_context_set_icon_name")
  (return-type "none")
  (parameters
    '("const-char*" "icon_name")
  )
)



;; From gdk-autocleanup.h



;; From gdkcairo.h

(define-function gdk_cairo_get_clip_rectangle
  (c-name "gdk_cairo_get_clip_rectangle")
  (return-type "gboolean")
  (parameters
    '("cairo_t*" "cr")
    '("GdkRectangle*" "rect")
  )
)

(define-function gdk_cairo_set_source_rgba
  (c-name "gdk_cairo_set_source_rgba")
  (return-type "none")
  (parameters
    '("cairo_t*" "cr")
    '("const-GdkRGBA*" "rgba")
  )
)

(define-function gdk_cairo_set_source_pixbuf
  (c-name "gdk_cairo_set_source_pixbuf")
  (return-type "none")
  (parameters
    '("cairo_t*" "cr")
    '("const-GdkPixbuf*" "pixbuf")
    '("gdouble" "pixbuf_x")
    '("gdouble" "pixbuf_y")
  )
)

(define-function gdk_cairo_rectangle
  (c-name "gdk_cairo_rectangle")
  (return-type "none")
  (parameters
    '("cairo_t*" "cr")
    '("const-GdkRectangle*" "rectangle")
  )
)

(define-function gdk_cairo_region
  (c-name "gdk_cairo_region")
  (return-type "none")
  (parameters
    '("cairo_t*" "cr")
    '("const-cairo_region_t*" "region")
  )
)

(define-function gdk_cairo_region_create_from_surface
  (c-name "gdk_cairo_region_create_from_surface")
  (return-type "cairo_region_t*")
  (parameters
    '("cairo_surface_t*" "surface")
  )
)

(define-function gdk_cairo_surface_create_from_pixbuf
  (c-name "gdk_cairo_surface_create_from_pixbuf")
  (return-type "cairo_surface_t*")
  (parameters
    '("const-GdkPixbuf*" "pixbuf")
    '("int" "scale")
    '("GdkWindow*" "for_window")
  )
)

(define-function gdk_cairo_draw_from_gl
  (c-name "gdk_cairo_draw_from_gl")
  (return-type "none")
  (parameters
    '("cairo_t*" "cr")
    '("GdkWindow*" "window")
    '("int" "source")
    '("int" "source_type")
    '("int" "buffer_scale")
    '("int" "x")
    '("int" "y")
    '("int" "width")
    '("int" "height")
  )
)

(define-function gdk_cairo_get_drawing_context
  (c-name "gdk_cairo_get_drawing_context")
  (return-type "GdkDrawingContext*")
  (parameters
    '("cairo_t*" "cr")
  )
)

(define-function gdk_cairo_surface_upload_to_gl
  (c-name "gdk_cairo_surface_upload_to_gl")
  (return-type "none")
  (parameters
    '("cairo_surface_t*" "surface")
    '("int" "target")
    '("int" "width")
    '("int" "height")
    '("GdkGLContext*" "context")
  )
)



;; From gdkclipboard.h

(define-function gdk_clipboard_get_type
  (c-name "gdk_clipboard_get_type")
  (return-type "GType")
)

(define-method get_display
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_get_display")
  (return-type "GdkDisplay*")
)

(define-method get_formats
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_get_formats")
  (return-type "GdkContentFormats*")
)

(define-method is_local
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_is_local")
  (return-type "gboolean")
)

(define-method get_content
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_get_content")
  (return-type "GdkContentProvider*")
)

(define-method store_async
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_store_async")
  (return-type "none")
  (parameters
    '("int" "io_priority")
    '("GCancellable*" "cancellable")
    '("GAsyncReadyCallback" "callback")
    '("gpointer" "user_data")
  )
)

(define-method store_finish
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_store_finish")
  (return-type "gboolean")
  (parameters
    '("GAsyncResult*" "result")
    '("GError**" "error")
  )
)

(define-method read_async
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_read_async")
  (return-type "none")
  (parameters
    '("const-char**" "mime_types")
    '("int" "io_priority")
    '("GCancellable*" "cancellable")
    '("GAsyncReadyCallback" "callback")
    '("gpointer" "user_data")
  )
)

(define-method read_finish
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_read_finish")
  (return-type "GInputStream*")
  (parameters
    '("const-char**" "out_mime_type")
    '("GAsyncResult*" "result")
    '("GError**" "error")
  )
)

(define-method read_value_async
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_read_value_async")
  (return-type "none")
  (parameters
    '("GType" "type")
    '("int" "io_priority")
    '("GCancellable*" "cancellable")
    '("GAsyncReadyCallback" "callback")
    '("gpointer" "user_data")
  )
)

(define-method read_value_finish
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_read_value_finish")
  (return-type "const-GValue*")
  (parameters
    '("GAsyncResult*" "result")
    '("GError**" "error")
  )
)

(define-method read_texture_async
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_read_texture_async")
  (return-type "none")
  (parameters
    '("GCancellable*" "cancellable")
    '("GAsyncReadyCallback" "callback")
    '("gpointer" "user_data")
  )
)

(define-method read_texture_finish
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_read_texture_finish")
  (return-type "GdkTexture*")
  (parameters
    '("GAsyncResult*" "result")
    '("GError**" "error")
  )
)

(define-method read_text_async
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_read_text_async")
  (return-type "none")
  (parameters
    '("GCancellable*" "cancellable")
    '("GAsyncReadyCallback" "callback")
    '("gpointer" "user_data")
  )
)

(define-method read_text_finish
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_read_text_finish")
  (return-type "char*")
  (parameters
    '("GAsyncResult*" "result")
    '("GError**" "error")
  )
)

(define-method set_content
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_set_content")
  (return-type "gboolean")
  (parameters
    '("GdkContentProvider*" "provider")
  )
)

(define-method set
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_set")
  (return-type "none")
  (parameters
    '("GType" "type")
  )
  (varargs #t)
)

(define-method set_valist
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_set_valist")
  (return-type "none")
  (parameters
    '("GType" "type")
    '("va_list" "args")
  )
)

(define-method set_value
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_set_value")
  (return-type "none")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-method set_text
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_set_text")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method set_texture
  (of-object "GdkClipboard")
  (c-name "gdk_clipboard_set_texture")
  (return-type "none")
  (parameters
    '("GdkTexture*" "texture")
  )
)



;; From gdkcontentdeserializer.h

(define-function gdk_content_deserializer_get_type
  (c-name "gdk_content_deserializer_get_type")
  (return-type "GType")
)

(define-method get_mime_type
  (of-object "GdkContentDeserializer")
  (c-name "gdk_content_deserializer_get_mime_type")
  (return-type "const-char*")
)

(define-method get_gtype
  (of-object "GdkContentDeserializer")
  (c-name "gdk_content_deserializer_get_gtype")
  (return-type "GType")
)

(define-method get_value
  (of-object "GdkContentDeserializer")
  (c-name "gdk_content_deserializer_get_value")
  (return-type "GValue*")
)

(define-method get_input_stream
  (of-object "GdkContentDeserializer")
  (c-name "gdk_content_deserializer_get_input_stream")
  (return-type "GInputStream*")
)

(define-method get_priority
  (of-object "GdkContentDeserializer")
  (c-name "gdk_content_deserializer_get_priority")
  (return-type "int")
)

(define-method get_cancellable
  (of-object "GdkContentDeserializer")
  (c-name "gdk_content_deserializer_get_cancellable")
  (return-type "GCancellable*")
)

(define-method get_user_data
  (of-object "GdkContentDeserializer")
  (c-name "gdk_content_deserializer_get_user_data")
  (return-type "gpointer")
)

(define-method set_task_data
  (of-object "GdkContentDeserializer")
  (c-name "gdk_content_deserializer_set_task_data")
  (return-type "none")
  (parameters
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-method get_task_data
  (of-object "GdkContentDeserializer")
  (c-name "gdk_content_deserializer_get_task_data")
  (return-type "gpointer")
)

(define-method return_success
  (of-object "GdkContentDeserializer")
  (c-name "gdk_content_deserializer_return_success")
  (return-type "none")
)

(define-method return_error
  (of-object "GdkContentDeserializer")
  (c-name "gdk_content_deserializer_return_error")
  (return-type "none")
  (parameters
    '("GError*" "error")
  )
)

(define-method union_deserialize_gtypes
  (of-object "GdkContentFormats")
  (c-name "gdk_content_formats_union_deserialize_gtypes")
  (return-type "GdkContentFormats*")
)

(define-method union_deserialize_mime_types
  (of-object "GdkContentFormats")
  (c-name "gdk_content_formats_union_deserialize_mime_types")
  (return-type "GdkContentFormats*")
)

(define-function gdk_content_register_deserializer
  (c-name "gdk_content_register_deserializer")
  (return-type "none")
  (parameters
    '("const-char*" "mime_type")
    '("GType" "type")
    '("GdkContentDeserializeFunc" "deserialize")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-function gdk_content_deserialize_async
  (c-name "gdk_content_deserialize_async")
  (return-type "none")
  (parameters
    '("GInputStream*" "stream")
    '("const-char*" "mime_type")
    '("GType" "type")
    '("int" "io_priority")
    '("GCancellable*" "cancellable")
    '("GAsyncReadyCallback" "callback")
    '("gpointer" "user_data")
  )
)

(define-function gdk_content_deserialize_finish
  (c-name "gdk_content_deserialize_finish")
  (return-type "gboolean")
  (parameters
    '("GAsyncResult*" "result")
    '("GValue*" "value")
    '("GError**" "error")
  )
)



;; From gdkcontentformats.h

(define-function gdk_intern_mime_type
  (c-name "gdk_intern_mime_type")
  (return-type "const-char*")
  (parameters
    '("const-char*" "string")
  )
)

(define-function gdk_content_formats_get_type
  (c-name "gdk_content_formats_get_type")
  (return-type "GType")
)

(define-function gdk_content_formats_new
  (c-name "gdk_content_formats_new")
  (is-constructor-of "GdkContentFormats")
  (return-type "GdkContentFormats*")
  (parameters
    '("const-char**" "mime_types")
    '("guint" "n_mime_types")
  )
)

(define-function gdk_content_formats_new_for_gtype
  (c-name "gdk_content_formats_new_for_gtype")
  (return-type "GdkContentFormats*")
  (parameters
    '("GType" "type")
  )
)

(define-method ref
  (of-object "GdkContentFormats")
  (c-name "gdk_content_formats_ref")
  (return-type "GdkContentFormats*")
)

(define-method unref
  (of-object "GdkContentFormats")
  (c-name "gdk_content_formats_unref")
  (return-type "none")
)

(define-method print
  (of-object "GdkContentFormats")
  (c-name "gdk_content_formats_print")
  (return-type "none")
  (parameters
    '("GString*" "string")
  )
)

(define-method to_string
  (of-object "GdkContentFormats")
  (c-name "gdk_content_formats_to_string")
  (return-type "char*")
)

(define-method get_gtypes
  (of-object "GdkContentFormats")
  (c-name "gdk_content_formats_get_gtypes")
  (return-type "const-GType*")
  (parameters
    '("gsize*" "n_gtypes")
  )
)

(define-method get_mime_types
  (of-object "GdkContentFormats")
  (c-name "gdk_content_formats_get_mime_types")
  (return-type "const-char*-const*")
  (parameters
    '("gsize*" "n_mime_types")
  )
)

(define-method union
  (of-object "GdkContentFormats")
  (c-name "gdk_content_formats_union")
  (return-type "GdkContentFormats*")
  (parameters
    '("const-GdkContentFormats*" "second")
  )
)

(define-method match
  (of-object "GdkContentFormats")
  (c-name "gdk_content_formats_match")
  (return-type "gboolean")
  (parameters
    '("const-GdkContentFormats*" "second")
  )
)

(define-method match_gtype
  (of-object "GdkContentFormats")
  (c-name "gdk_content_formats_match_gtype")
  (return-type "GType")
  (parameters
    '("const-GdkContentFormats*" "second")
  )
)

(define-method match_mime_type
  (of-object "GdkContentFormats")
  (c-name "gdk_content_formats_match_mime_type")
  (return-type "const-char*")
  (parameters
    '("const-GdkContentFormats*" "second")
  )
)

(define-method contain_gtype
  (of-object "GdkContentFormats")
  (c-name "gdk_content_formats_contain_gtype")
  (return-type "gboolean")
  (parameters
    '("GType" "type")
  )
)

(define-method contain_mime_type
  (of-object "GdkContentFormats")
  (c-name "gdk_content_formats_contain_mime_type")
  (return-type "gboolean")
  (parameters
    '("const-char*" "mime_type")
  )
)

(define-function gdk_content_formats_builder_get_type
  (c-name "gdk_content_formats_builder_get_type")
  (return-type "GType")
)

(define-function gdk_content_formats_builder_new
  (c-name "gdk_content_formats_builder_new")
  (is-constructor-of "GdkContentFormatsBuilder")
  (return-type "GdkContentFormatsBuilder*")
)

(define-method ref
  (of-object "GdkContentFormatsBuilder")
  (c-name "gdk_content_formats_builder_ref")
  (return-type "GdkContentFormatsBuilder*")
)

(define-method unref
  (of-object "GdkContentFormatsBuilder")
  (c-name "gdk_content_formats_builder_unref")
  (return-type "none")
)

(define-method free_to_formats
  (of-object "GdkContentFormatsBuilder")
  (c-name "gdk_content_formats_builder_free_to_formats")
  (return-type "GdkContentFormats*")
)

(define-method to_formats
  (of-object "GdkContentFormatsBuilder")
  (c-name "gdk_content_formats_builder_to_formats")
  (return-type "GdkContentFormats*")
)

(define-method add_formats
  (of-object "GdkContentFormatsBuilder")
  (c-name "gdk_content_formats_builder_add_formats")
  (return-type "none")
  (parameters
    '("const-GdkContentFormats*" "formats")
  )
)

(define-method add_mime_type
  (of-object "GdkContentFormatsBuilder")
  (c-name "gdk_content_formats_builder_add_mime_type")
  (return-type "none")
  (parameters
    '("const-char*" "mime_type")
  )
)

(define-method add_gtype
  (of-object "GdkContentFormatsBuilder")
  (c-name "gdk_content_formats_builder_add_gtype")
  (return-type "none")
  (parameters
    '("GType" "type")
  )
)

(define-function gdk_file_list_get_type
  (c-name "gdk_file_list_get_type")
  (return-type "GType")
)



;; From gdkcontentprovider.h

(define-function gdk_content_provider_get_type
  (c-name "gdk_content_provider_get_type")
  (return-type "GType")
)

(define-method ref_formats
  (of-object "GdkContentProvider")
  (c-name "gdk_content_provider_ref_formats")
  (return-type "GdkContentFormats*")
)

(define-method ref_storable_formats
  (of-object "GdkContentProvider")
  (c-name "gdk_content_provider_ref_storable_formats")
  (return-type "GdkContentFormats*")
)

(define-method content_changed
  (of-object "GdkContentProvider")
  (c-name "gdk_content_provider_content_changed")
  (return-type "none")
)

(define-method write_mime_type_async
  (of-object "GdkContentProvider")
  (c-name "gdk_content_provider_write_mime_type_async")
  (return-type "none")
  (parameters
    '("const-char*" "mime_type")
    '("GOutputStream*" "stream")
    '("int" "io_priority")
    '("GCancellable*" "cancellable")
    '("GAsyncReadyCallback" "callback")
    '("gpointer" "user_data")
  )
)

(define-method write_mime_type_finish
  (of-object "GdkContentProvider")
  (c-name "gdk_content_provider_write_mime_type_finish")
  (return-type "gboolean")
  (parameters
    '("GAsyncResult*" "result")
    '("GError**" "error")
  )
)

(define-method get_value
  (of-object "GdkContentProvider")
  (c-name "gdk_content_provider_get_value")
  (return-type "gboolean")
  (parameters
    '("GValue*" "value")
    '("GError**" "error")
  )
)



;; From gdkcontentproviderimpl.h

(define-function gdk_content_provider_new_for_value
  (c-name "gdk_content_provider_new_for_value")
  (return-type "GdkContentProvider*")
  (parameters
    '("const-GValue*" "value")
  )
)

(define-function gdk_content_provider_new_for_bytes
  (c-name "gdk_content_provider_new_for_bytes")
  (return-type "GdkContentProvider*")
  (parameters
    '("const-char*" "mime_type")
    '("GBytes*" "bytes")
  )
)



;; From gdkcontentserializer.h

(define-function gdk_content_serializer_get_type
  (c-name "gdk_content_serializer_get_type")
  (return-type "GType")
)

(define-method get_mime_type
  (of-object "GdkContentSerializer")
  (c-name "gdk_content_serializer_get_mime_type")
  (return-type "const-char*")
)

(define-method get_gtype
  (of-object "GdkContentSerializer")
  (c-name "gdk_content_serializer_get_gtype")
  (return-type "GType")
)

(define-method get_value
  (of-object "GdkContentSerializer")
  (c-name "gdk_content_serializer_get_value")
  (return-type "const-GValue*")
)

(define-method get_output_stream
  (of-object "GdkContentSerializer")
  (c-name "gdk_content_serializer_get_output_stream")
  (return-type "GOutputStream*")
)

(define-method get_priority
  (of-object "GdkContentSerializer")
  (c-name "gdk_content_serializer_get_priority")
  (return-type "int")
)

(define-method get_cancellable
  (of-object "GdkContentSerializer")
  (c-name "gdk_content_serializer_get_cancellable")
  (return-type "GCancellable*")
)

(define-method get_user_data
  (of-object "GdkContentSerializer")
  (c-name "gdk_content_serializer_get_user_data")
  (return-type "gpointer")
)

(define-method set_task_data
  (of-object "GdkContentSerializer")
  (c-name "gdk_content_serializer_set_task_data")
  (return-type "none")
  (parameters
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-method get_task_data
  (of-object "GdkContentSerializer")
  (c-name "gdk_content_serializer_get_task_data")
  (return-type "gpointer")
)

(define-method return_success
  (of-object "GdkContentSerializer")
  (c-name "gdk_content_serializer_return_success")
  (return-type "none")
)

(define-method return_error
  (of-object "GdkContentSerializer")
  (c-name "gdk_content_serializer_return_error")
  (return-type "none")
  (parameters
    '("GError*" "error")
  )
)

(define-method union_serialize_gtypes
  (of-object "GdkContentFormats")
  (c-name "gdk_content_formats_union_serialize_gtypes")
  (return-type "GdkContentFormats*")
)

(define-method union_serialize_mime_types
  (of-object "GdkContentFormats")
  (c-name "gdk_content_formats_union_serialize_mime_types")
  (return-type "GdkContentFormats*")
)

(define-function gdk_content_register_serializer
  (c-name "gdk_content_register_serializer")
  (return-type "none")
  (parameters
    '("GType" "type")
    '("const-char*" "mime_type")
    '("GdkContentSerializeFunc" "serialize")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-function gdk_content_serialize_async
  (c-name "gdk_content_serialize_async")
  (return-type "none")
  (parameters
    '("GOutputStream*" "stream")
    '("const-char*" "mime_type")
    '("const-GValue*" "value")
    '("int" "io_priority")
    '("GCancellable*" "cancellable")
    '("GAsyncReadyCallback" "callback")
    '("gpointer" "user_data")
  )
)

(define-function gdk_content_serialize_finish
  (c-name "gdk_content_serialize_finish")
  (return-type "gboolean")
  (parameters
    '("GAsyncResult*" "result")
    '("GError**" "error")
  )
)



;; From gdkcursor.h

(define-function gdk_cursor_get_type
  (c-name "gdk_cursor_get_type")
  (return-type "GType")
)

(define-function gdk_cursor_new_from_texture
  (c-name "gdk_cursor_new_from_texture")
  (return-type "GdkCursor*")
  (parameters
    '("GdkTexture*" "texture")
    '("int" "hotspot_x")
    '("int" "hotspot_y")
    '("GdkCursor*" "fallback")
  )
)

(define-function gdk_cursor_new_from_name
  (c-name "gdk_cursor_new_from_name")
  (return-type "GdkCursor*")
  (parameters
    '("const-gchar*" "name")
    '("GdkCursor*" "fallback")
  )
)

(define-method get_fallback
  (of-object "GdkCursor")
  (c-name "gdk_cursor_get_fallback")
  (return-type "GdkCursor*")
)

(define-method get_name
  (of-object "GdkCursor")
  (c-name "gdk_cursor_get_name")
  (return-type "const-char*")
)

(define-method get_texture
  (of-object "GdkCursor")
  (c-name "gdk_cursor_get_texture")
  (return-type "GdkTexture*")
)

(define-method get_hotspot_x
  (of-object "GdkCursor")
  (c-name "gdk_cursor_get_hotspot_x")
  (return-type "int")
)

(define-method get_hotspot_y
  (of-object "GdkCursor")
  (c-name "gdk_cursor_get_hotspot_y")
  (return-type "int")
)



;; From gdkdevice.h

(define-function gdk_device_get_type
  (c-name "gdk_device_get_type")
  (return-type "GType")
)

(define-method get_name
  (of-object "GdkDevice")
  (c-name "gdk_device_get_name")
  (return-type "const-gchar*")
)

(define-method get_has_cursor
  (of-object "GdkDevice")
  (c-name "gdk_device_get_has_cursor")
  (return-type "gboolean")
)

(define-method get_source
  (of-object "GdkDevice")
  (c-name "gdk_device_get_source")
  (return-type "GdkInputSource")
)

(define-method get_mode
  (of-object "GdkDevice")
  (c-name "gdk_device_get_mode")
  (return-type "GdkInputMode")
)

(define-method set_mode
  (of-object "GdkDevice")
  (c-name "gdk_device_set_mode")
  (return-type "gboolean")
  (parameters
    '("GdkInputMode" "mode")
  )
)

(define-method get_n_keys
  (of-object "GdkDevice")
  (c-name "gdk_device_get_n_keys")
  (return-type "gint")
)

(define-method get_key
  (of-object "GdkDevice")
  (c-name "gdk_device_get_key")
  (return-type "gboolean")
  (parameters
    '("guint" "index_")
    '("guint*" "keyval")
    '("GdkModifierType*" "modifiers")
  )
)

(define-method set_key
  (of-object "GdkDevice")
  (c-name "gdk_device_set_key")
  (return-type "none")
  (parameters
    '("guint" "index_")
    '("guint" "keyval")
    '("GdkModifierType" "modifiers")
  )
)

(define-method get_axis_use
  (of-object "GdkDevice")
  (c-name "gdk_device_get_axis_use")
  (return-type "GdkAxisUse")
  (parameters
    '("guint" "index_")
  )
)

(define-method set_axis_use
  (of-object "GdkDevice")
  (c-name "gdk_device_set_axis_use")
  (return-type "none")
  (parameters
    '("guint" "index_")
    '("GdkAxisUse" "use")
  )
)

(define-method get_state
  (of-object "GdkDevice")
  (c-name "gdk_device_get_state")
  (return-type "none")
  (parameters
    '("GdkWindow*" "window")
    '("gdouble*" "axes")
    '("GdkModifierType*" "mask")
  )
)

(define-method get_position
  (of-object "GdkDevice")
  (c-name "gdk_device_get_position")
  (return-type "none")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
  )
)

(define-method get_window_at_position
  (of-object "GdkDevice")
  (c-name "gdk_device_get_window_at_position")
  (return-type "GdkWindow*")
  (parameters
    '("gint*" "win_x")
    '("gint*" "win_y")
  )
)

(define-method get_position_double
  (of-object "GdkDevice")
  (c-name "gdk_device_get_position_double")
  (return-type "none")
  (parameters
    '("gdouble*" "x")
    '("gdouble*" "y")
  )
)

(define-method get_window_at_position_double
  (of-object "GdkDevice")
  (c-name "gdk_device_get_window_at_position_double")
  (return-type "GdkWindow*")
  (parameters
    '("gdouble*" "win_x")
    '("gdouble*" "win_y")
  )
)

(define-method get_history
  (of-object "GdkDevice")
  (c-name "gdk_device_get_history")
  (return-type "gboolean")
  (parameters
    '("GdkWindow*" "window")
    '("guint32" "start")
    '("guint32" "stop")
    '("GdkTimeCoord***" "events")
    '("gint*" "n_events")
  )
)

(define-function gdk_device_free_history
  (c-name "gdk_device_free_history")
  (return-type "none")
  (parameters
    '("GdkTimeCoord**" "events")
    '("gint" "n_events")
  )
)

(define-method get_n_axes
  (of-object "GdkDevice")
  (c-name "gdk_device_get_n_axes")
  (return-type "gint")
)

(define-method list_axes
  (of-object "GdkDevice")
  (c-name "gdk_device_list_axes")
  (return-type "GList*")
)

(define-method get_axis_value
  (of-object "GdkDevice")
  (c-name "gdk_device_get_axis_value")
  (return-type "gboolean")
  (parameters
    '("gdouble*" "axes")
    '("GdkAtom" "axis_label")
    '("gdouble*" "value")
  )
)

(define-method get_axis
  (of-object "GdkDevice")
  (c-name "gdk_device_get_axis")
  (return-type "gboolean")
  (parameters
    '("gdouble*" "axes")
    '("GdkAxisUse" "use")
    '("gdouble*" "value")
  )
)

(define-method get_display
  (of-object "GdkDevice")
  (c-name "gdk_device_get_display")
  (return-type "GdkDisplay*")
)

(define-method get_associated_device
  (of-object "GdkDevice")
  (c-name "gdk_device_get_associated_device")
  (return-type "GdkDevice*")
)

(define-method list_slave_devices
  (of-object "GdkDevice")
  (c-name "gdk_device_list_slave_devices")
  (return-type "GList*")
)

(define-method get_device_type
  (of-object "GdkDevice")
  (c-name "gdk_device_get_device_type")
  (return-type "GdkDeviceType")
)

(define-method grab
  (of-object "GdkDevice")
  (c-name "gdk_device_grab")
  (return-type "GdkGrabStatus")
  (parameters
    '("GdkWindow*" "window")
    '("GdkGrabOwnership" "grab_ownership")
    '("gboolean" "owner_events")
    '("GdkEventMask" "event_mask")
    '("GdkCursor*" "cursor")
    '("guint32" "time_")
  )
)

(define-method ungrab
  (of-object "GdkDevice")
  (c-name "gdk_device_ungrab")
  (return-type "none")
  (parameters
    '("guint32" "time_")
  )
)

(define-method warp
  (of-object "GdkDevice")
  (c-name "gdk_device_warp")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method get_last_event_window
  (of-object "GdkDevice")
  (c-name "gdk_device_get_last_event_window")
  (return-type "GdkWindow*")
)

(define-method get_vendor_id
  (of-object "GdkDevice")
  (c-name "gdk_device_get_vendor_id")
  (return-type "const-gchar*")
)

(define-method get_product_id
  (of-object "GdkDevice")
  (c-name "gdk_device_get_product_id")
  (return-type "const-gchar*")
)

(define-method get_seat
  (of-object "GdkDevice")
  (c-name "gdk_device_get_seat")
  (return-type "GdkSeat*")
)

(define-method get_axes
  (of-object "GdkDevice")
  (c-name "gdk_device_get_axes")
  (return-type "GdkAxisFlags")
)



;; From gdkdevicepad.h

(define-function gdk_device_pad_get_type
  (c-name "gdk_device_pad_get_type")
  (return-type "GType")
)

(define-method get_n_groups
  (of-object "GdkDevicePad")
  (c-name "gdk_device_pad_get_n_groups")
  (return-type "gint")
)

(define-method get_group_n_modes
  (of-object "GdkDevicePad")
  (c-name "gdk_device_pad_get_group_n_modes")
  (return-type "gint")
  (parameters
    '("gint" "group_idx")
  )
)

(define-method get_n_features
  (of-object "GdkDevicePad")
  (c-name "gdk_device_pad_get_n_features")
  (return-type "gint")
  (parameters
    '("GdkDevicePadFeature" "feature")
  )
)

(define-method get_feature_group
  (of-object "GdkDevicePad")
  (c-name "gdk_device_pad_get_feature_group")
  (return-type "gint")
  (parameters
    '("GdkDevicePadFeature" "feature")
    '("gint" "feature_idx")
  )
)



;; From gdkdevicetool.h

(define-function gdk_device_tool_get_type
  (c-name "gdk_device_tool_get_type")
  (return-type "GType")
)

(define-method get_serial
  (of-object "GdkDeviceTool")
  (c-name "gdk_device_tool_get_serial")
  (return-type "guint64")
)

(define-method get_hardware_id
  (of-object "GdkDeviceTool")
  (c-name "gdk_device_tool_get_hardware_id")
  (return-type "guint64")
)

(define-method get_tool_type
  (of-object "GdkDeviceTool")
  (c-name "gdk_device_tool_get_tool_type")
  (return-type "GdkDeviceToolType")
)



;; From gdkdisplay.h

(define-function gdk_display_get_type
  (c-name "gdk_display_get_type")
  (return-type "GType")
)

(define-function gdk_display_open
  (c-name "gdk_display_open")
  (return-type "GdkDisplay*")
  (parameters
    '("const-gchar*" "display_name")
  )
)

(define-method get_name
  (of-object "GdkDisplay")
  (c-name "gdk_display_get_name")
  (return-type "const-gchar*")
)

(define-method device_is_grabbed
  (of-object "GdkDisplay")
  (c-name "gdk_display_device_is_grabbed")
  (return-type "gboolean")
  (parameters
    '("GdkDevice*" "device")
  )
)

(define-method beep
  (of-object "GdkDisplay")
  (c-name "gdk_display_beep")
  (return-type "none")
)

(define-method sync
  (of-object "GdkDisplay")
  (c-name "gdk_display_sync")
  (return-type "none")
)

(define-method flush
  (of-object "GdkDisplay")
  (c-name "gdk_display_flush")
  (return-type "none")
)

(define-method close
  (of-object "GdkDisplay")
  (c-name "gdk_display_close")
  (return-type "none")
)

(define-method is_closed
  (of-object "GdkDisplay")
  (c-name "gdk_display_is_closed")
  (return-type "gboolean")
)

(define-method is_composited
  (of-object "GdkDisplay")
  (c-name "gdk_display_is_composited")
  (return-type "gboolean")
)

(define-method is_rgba
  (of-object "GdkDisplay")
  (c-name "gdk_display_is_rgba")
  (return-type "gboolean")
)

(define-method get_event
  (of-object "GdkDisplay")
  (c-name "gdk_display_get_event")
  (return-type "GdkEvent*")
)

(define-method peek_event
  (of-object "GdkDisplay")
  (c-name "gdk_display_peek_event")
  (return-type "GdkEvent*")
)

(define-method put_event
  (of-object "GdkDisplay")
  (c-name "gdk_display_put_event")
  (return-type "none")
  (parameters
    '("const-GdkEvent*" "event")
  )
)

(define-method has_pending
  (of-object "GdkDisplay")
  (c-name "gdk_display_has_pending")
  (return-type "gboolean")
)

(define-function gdk_display_get_default
  (c-name "gdk_display_get_default")
  (return-type "GdkDisplay*")
)

(define-method get_default_group
  (of-object "GdkDisplay")
  (c-name "gdk_display_get_default_group")
  (return-type "GdkWindow*")
)

(define-method get_clipboard
  (of-object "GdkDisplay")
  (c-name "gdk_display_get_clipboard")
  (return-type "GdkClipboard*")
)

(define-method get_primary_clipboard
  (of-object "GdkDisplay")
  (c-name "gdk_display_get_primary_clipboard")
  (return-type "GdkClipboard*")
)

(define-method supports_shapes
  (of-object "GdkDisplay")
  (c-name "gdk_display_supports_shapes")
  (return-type "gboolean")
)

(define-method supports_input_shapes
  (of-object "GdkDisplay")
  (c-name "gdk_display_supports_input_shapes")
  (return-type "gboolean")
)

(define-method notify_startup_complete
  (of-object "GdkDisplay")
  (c-name "gdk_display_notify_startup_complete")
  (return-type "none")
  (parameters
    '("const-gchar*" "startup_id")
  )
)

(define-method get_app_launch_context
  (of-object "GdkDisplay")
  (c-name "gdk_display_get_app_launch_context")
  (return-type "GdkAppLaunchContext*")
)

(define-method get_default_seat
  (of-object "GdkDisplay")
  (c-name "gdk_display_get_default_seat")
  (return-type "GdkSeat*")
)

(define-method list_seats
  (of-object "GdkDisplay")
  (c-name "gdk_display_list_seats")
  (return-type "GList*")
)

(define-method get_n_monitors
  (of-object "GdkDisplay")
  (c-name "gdk_display_get_n_monitors")
  (return-type "int")
)

(define-method get_monitor
  (of-object "GdkDisplay")
  (c-name "gdk_display_get_monitor")
  (return-type "GdkMonitor*")
  (parameters
    '("int" "monitor_num")
  )
)

(define-method get_primary_monitor
  (of-object "GdkDisplay")
  (c-name "gdk_display_get_primary_monitor")
  (return-type "GdkMonitor*")
)

(define-method get_monitor_at_point
  (of-object "GdkDisplay")
  (c-name "gdk_display_get_monitor_at_point")
  (return-type "GdkMonitor*")
  (parameters
    '("int" "x")
    '("int" "y")
  )
)

(define-method get_monitor_at_window
  (of-object "GdkDisplay")
  (c-name "gdk_display_get_monitor_at_window")
  (return-type "GdkMonitor*")
  (parameters
    '("GdkWindow*" "window")
  )
)

(define-method get_keymap
  (of-object "GdkDisplay")
  (c-name "gdk_display_get_keymap")
  (return-type "GdkKeymap*")
)

(define-method get_setting
  (of-object "GdkDisplay")
  (c-name "gdk_display_get_setting")
  (return-type "gboolean")
  (parameters
    '("const-char*" "name")
    '("GValue*" "value")
  )
)



;; From gdkdisplaymanager.h

(define-function gdk_display_manager_get_type
  (c-name "gdk_display_manager_get_type")
  (return-type "GType")
)

(define-function gdk_display_manager_get
  (c-name "gdk_display_manager_get")
  (return-type "GdkDisplayManager*")
)

(define-method get_default_display
  (of-object "GdkDisplayManager")
  (c-name "gdk_display_manager_get_default_display")
  (return-type "GdkDisplay*")
)

(define-method set_default_display
  (of-object "GdkDisplayManager")
  (c-name "gdk_display_manager_set_default_display")
  (return-type "none")
  (parameters
    '("GdkDisplay*" "display")
  )
)

(define-method list_displays
  (of-object "GdkDisplayManager")
  (c-name "gdk_display_manager_list_displays")
  (return-type "GSList*")
)

(define-method open_display
  (of-object "GdkDisplayManager")
  (c-name "gdk_display_manager_open_display")
  (return-type "GdkDisplay*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-function gdk_set_allowed_backends
  (c-name "gdk_set_allowed_backends")
  (return-type "none")
  (parameters
    '("const-gchar*" "backends")
  )
)



;; From gdkdnd.h

(define-function gdk_drag_context_get_type
  (c-name "gdk_drag_context_get_type")
  (return-type "GType")
)

(define-method get_display
  (of-object "GdkDragContext")
  (c-name "gdk_drag_context_get_display")
  (return-type "GdkDisplay*")
)

(define-method get_device
  (of-object "GdkDragContext")
  (c-name "gdk_drag_context_get_device")
  (return-type "GdkDevice*")
)

(define-method get_formats
  (of-object "GdkDragContext")
  (c-name "gdk_drag_context_get_formats")
  (return-type "GdkContentFormats*")
)

(define-method get_actions
  (of-object "GdkDragContext")
  (c-name "gdk_drag_context_get_actions")
  (return-type "GdkDragAction")
)

(define-method get_suggested_action
  (of-object "GdkDragContext")
  (c-name "gdk_drag_context_get_suggested_action")
  (return-type "GdkDragAction")
)

(define-method get_selected_action
  (of-object "GdkDragContext")
  (c-name "gdk_drag_context_get_selected_action")
  (return-type "GdkDragAction")
)

(define-method get_source_window
  (of-object "GdkDragContext")
  (c-name "gdk_drag_context_get_source_window")
  (return-type "GdkWindow*")
)

(define-method get_dest_window
  (of-object "GdkDragContext")
  (c-name "gdk_drag_context_get_dest_window")
  (return-type "GdkWindow*")
)

(define-function gdk_drag_status
  (c-name "gdk_drag_status")
  (return-type "none")
  (parameters
    '("GdkDragContext*" "context")
    '("GdkDragAction" "action")
    '("guint32" "time_")
  )
)

(define-function gdk_drop_reply
  (c-name "gdk_drop_reply")
  (return-type "none")
  (parameters
    '("GdkDragContext*" "context")
    '("gboolean" "accepted")
    '("guint32" "time_")
  )
)

(define-function gdk_drop_finish
  (c-name "gdk_drop_finish")
  (return-type "none")
  (parameters
    '("GdkDragContext*" "context")
    '("gboolean" "success")
    '("guint32" "time_")
  )
)

(define-function gdk_drop_read_async
  (c-name "gdk_drop_read_async")
  (return-type "none")
  (parameters
    '("GdkDragContext*" "context")
    '("const-char**" "mime_types")
    '("int" "io_priority")
    '("GCancellable*" "cancellable")
    '("GAsyncReadyCallback" "callback")
    '("gpointer" "user_data")
  )
)

(define-function gdk_drop_read_finish
  (c-name "gdk_drop_read_finish")
  (return-type "GInputStream*")
  (parameters
    '("GdkDragContext*" "context")
    '("const-char**" "out_mime_type")
    '("GAsyncResult*" "result")
    '("GError**" "error")
  )
)

(define-function gdk_drag_begin
  (c-name "gdk_drag_begin")
  (return-type "GdkDragContext*")
  (parameters
    '("GdkWindow*" "window")
    '("GdkDevice*" "device")
    '("GdkContentProvider*" "content")
    '("GdkDragAction" "actions")
    '("gint" "dx")
    '("gint" "dy")
  )
)

(define-function gdk_drag_drop_succeeded
  (c-name "gdk_drag_drop_succeeded")
  (return-type "gboolean")
  (parameters
    '("GdkDragContext*" "context")
  )
)

(define-function gdk_drag_drop_done
  (c-name "gdk_drag_drop_done")
  (return-type "none")
  (parameters
    '("GdkDragContext*" "context")
    '("gboolean" "success")
  )
)

(define-method get_drag_window
  (of-object "GdkDragContext")
  (c-name "gdk_drag_context_get_drag_window")
  (return-type "GdkWindow*")
)

(define-method set_hotspot
  (of-object "GdkDragContext")
  (c-name "gdk_drag_context_set_hotspot")
  (return-type "none")
  (parameters
    '("gint" "hot_x")
    '("gint" "hot_y")
  )
)



;; From gdkdrawcontext.h

(define-function gdk_draw_context_get_type
  (c-name "gdk_draw_context_get_type")
  (return-type "GType")
)

(define-method get_display
  (of-object "GdkDrawContext")
  (c-name "gdk_draw_context_get_display")
  (return-type "GdkDisplay*")
)

(define-method get_window
  (of-object "GdkDrawContext")
  (c-name "gdk_draw_context_get_window")
  (return-type "GdkWindow*")
)



;; From gdkdrawingcontext.h

(define-function gdk_drawing_context_get_type
  (c-name "gdk_drawing_context_get_type")
  (return-type "GType")
)

(define-method get_window
  (of-object "GdkDrawingContext")
  (c-name "gdk_drawing_context_get_window")
  (return-type "GdkWindow*")
)

(define-method get_paint_context
  (of-object "GdkDrawingContext")
  (c-name "gdk_drawing_context_get_paint_context")
  (return-type "GdkDrawContext*")
)

(define-method get_clip
  (of-object "GdkDrawingContext")
  (c-name "gdk_drawing_context_get_clip")
  (return-type "cairo_region_t*")
)

(define-method is_valid
  (of-object "GdkDrawingContext")
  (c-name "gdk_drawing_context_is_valid")
  (return-type "gboolean")
)

(define-method get_cairo_context
  (of-object "GdkDrawingContext")
  (c-name "gdk_drawing_context_get_cairo_context")
  (return-type "cairo_t*")
)



;; From gdkevents.h

(define-function gdk_event_get_type
  (c-name "gdk_event_get_type")
  (return-type "GType")
)

(define-function gdk_event_sequence_get_type
  (c-name "gdk_event_sequence_get_type")
  (return-type "GType")
)

(define-function gdk_event_new
  (c-name "gdk_event_new")
  (is-constructor-of "GdkEvent")
  (return-type "GdkEvent*")
  (parameters
    '("GdkEventType" "type")
  )
)

(define-method copy
  (of-object "GdkEvent")
  (c-name "gdk_event_copy")
  (return-type "GdkEvent*")
)

(define-method free
  (of-object "GdkEvent")
  (c-name "gdk_event_free")
  (return-type "none")
)

(define-method get_window
  (of-object "GdkEvent")
  (c-name "gdk_event_get_window")
  (return-type "GdkWindow*")
)

(define-method get_time
  (of-object "GdkEvent")
  (c-name "gdk_event_get_time")
  (return-type "guint32")
)

(define-method get_state
  (of-object "GdkEvent")
  (c-name "gdk_event_get_state")
  (return-type "gboolean")
  (parameters
    '("GdkModifierType*" "state")
  )
)

(define-method get_coords
  (of-object "GdkEvent")
  (c-name "gdk_event_get_coords")
  (return-type "gboolean")
  (parameters
    '("gdouble*" "x_win")
    '("gdouble*" "y_win")
  )
)

(define-method set_coords
  (of-object "GdkEvent")
  (c-name "gdk_event_set_coords")
  (return-type "none")
  (parameters
    '("gdouble" "x")
    '("gdouble" "y")
  )
)

(define-method get_root_coords
  (of-object "GdkEvent")
  (c-name "gdk_event_get_root_coords")
  (return-type "gboolean")
  (parameters
    '("gdouble*" "x_root")
    '("gdouble*" "y_root")
  )
)

(define-method get_button
  (of-object "GdkEvent")
  (c-name "gdk_event_get_button")
  (return-type "gboolean")
  (parameters
    '("guint*" "button")
  )
)

(define-method get_click_count
  (of-object "GdkEvent")
  (c-name "gdk_event_get_click_count")
  (return-type "gboolean")
  (parameters
    '("guint*" "click_count")
  )
)

(define-method get_keyval
  (of-object "GdkEvent")
  (c-name "gdk_event_get_keyval")
  (return-type "gboolean")
  (parameters
    '("guint*" "keyval")
  )
)

(define-method set_keyval
  (of-object "GdkEvent")
  (c-name "gdk_event_set_keyval")
  (return-type "none")
  (parameters
    '("guint" "keyval")
  )
)

(define-method get_keycode
  (of-object "GdkEvent")
  (c-name "gdk_event_get_keycode")
  (return-type "gboolean")
  (parameters
    '("guint16*" "keycode")
  )
)

(define-method get_key_is_modifier
  (of-object "GdkEvent")
  (c-name "gdk_event_get_key_is_modifier")
  (return-type "gboolean")
  (parameters
    '("gboolean*" "is_modifier")
  )
)

(define-method get_key_group
  (of-object "GdkEvent")
  (c-name "gdk_event_get_key_group")
  (return-type "gboolean")
  (parameters
    '("guint*" "group")
  )
)

(define-method get_string
  (of-object "GdkEvent")
  (c-name "gdk_event_get_string")
  (return-type "gboolean")
  (parameters
    '("const-char**" "string")
  )
)

(define-method get_scroll_direction
  (of-object "GdkEvent")
  (c-name "gdk_event_get_scroll_direction")
  (return-type "gboolean")
  (parameters
    '("GdkScrollDirection*" "direction")
  )
)

(define-method get_scroll_deltas
  (of-object "GdkEvent")
  (c-name "gdk_event_get_scroll_deltas")
  (return-type "gboolean")
  (parameters
    '("gdouble*" "delta_x")
    '("gdouble*" "delta_y")
  )
)

(define-method is_scroll_stop_event
  (of-object "GdkEvent")
  (c-name "gdk_event_is_scroll_stop_event")
  (return-type "gboolean")
)

(define-method get_axis
  (of-object "GdkEvent")
  (c-name "gdk_event_get_axis")
  (return-type "gboolean")
  (parameters
    '("GdkAxisUse" "axis_use")
    '("gdouble*" "value")
  )
)

(define-method set_device
  (of-object "GdkEvent")
  (c-name "gdk_event_set_device")
  (return-type "none")
  (parameters
    '("GdkDevice*" "device")
  )
)

(define-method get_device
  (of-object "GdkEvent")
  (c-name "gdk_event_get_device")
  (return-type "GdkDevice*")
)

(define-method set_source_device
  (of-object "GdkEvent")
  (c-name "gdk_event_set_source_device")
  (return-type "none")
  (parameters
    '("GdkDevice*" "device")
  )
)

(define-method get_source_device
  (of-object "GdkEvent")
  (c-name "gdk_event_get_source_device")
  (return-type "GdkDevice*")
)

(define-method triggers_context_menu
  (of-object "GdkEvent")
  (c-name "gdk_event_triggers_context_menu")
  (return-type "gboolean")
)

(define-method s_get_distance
  (of-object "GdkEvent")
  (c-name "gdk_events_get_distance")
  (return-type "gboolean")
  (parameters
    '("GdkEvent*" "event2")
    '("gdouble*" "distance")
  )
)

(define-method s_get_angle
  (of-object "GdkEvent")
  (c-name "gdk_events_get_angle")
  (return-type "gboolean")
  (parameters
    '("GdkEvent*" "event2")
    '("gdouble*" "angle")
  )
)

(define-method s_get_center
  (of-object "GdkEvent")
  (c-name "gdk_events_get_center")
  (return-type "gboolean")
  (parameters
    '("GdkEvent*" "event2")
    '("gdouble*" "x")
    '("gdouble*" "y")
  )
)

(define-function gdk_event_handler_set
  (c-name "gdk_event_handler_set")
  (return-type "none")
  (parameters
    '("GdkEventFunc" "func")
    '("gpointer" "data")
    '("GDestroyNotify" "notify")
  )
)

(define-method set_display
  (of-object "GdkEvent")
  (c-name "gdk_event_set_display")
  (return-type "none")
  (parameters
    '("GdkDisplay*" "display")
  )
)

(define-method get_display
  (of-object "GdkEvent")
  (c-name "gdk_event_get_display")
  (return-type "GdkDisplay*")
)

(define-method get_event_sequence
  (of-object "GdkEvent")
  (c-name "gdk_event_get_event_sequence")
  (return-type "GdkEventSequence*")
)

(define-method get_event_type
  (of-object "GdkEvent")
  (c-name "gdk_event_get_event_type")
  (return-type "GdkEventType")
)

(define-method get_seat
  (of-object "GdkEvent")
  (c-name "gdk_event_get_seat")
  (return-type "GdkSeat*")
)

(define-function gdk_set_show_events
  (c-name "gdk_set_show_events")
  (return-type "none")
  (parameters
    '("gboolean" "show_events")
  )
)

(define-function gdk_get_show_events
  (c-name "gdk_get_show_events")
  (return-type "gboolean")
)

(define-method get_device_tool
  (of-object "GdkEvent")
  (c-name "gdk_event_get_device_tool")
  (return-type "GdkDeviceTool*")
)

(define-method set_device_tool
  (of-object "GdkEvent")
  (c-name "gdk_event_set_device_tool")
  (return-type "none")
  (parameters
    '("GdkDeviceTool*" "tool")
  )
)

(define-method get_scancode
  (of-object "GdkEvent")
  (c-name "gdk_event_get_scancode")
  (return-type "int")
)

(define-method get_pointer_emulated
  (of-object "GdkEvent")
  (c-name "gdk_event_get_pointer_emulated")
  (return-type "gboolean")
)

(define-method set_user_data
  (of-object "GdkEvent")
  (c-name "gdk_event_set_user_data")
  (return-type "none")
  (parameters
    '("GObject*" "user_data")
  )
)

(define-method is_sent
  (of-object "GdkEvent")
  (c-name "gdk_event_is_sent")
  (return-type "gboolean")
)

(define-method get_drag_context
  (of-object "GdkEvent")
  (c-name "gdk_event_get_drag_context")
  (return-type "gboolean")
  (parameters
    '("GdkDragContext**" "context")
  )
)

(define-method get_crossing_mode
  (of-object "GdkEvent")
  (c-name "gdk_event_get_crossing_mode")
  (return-type "gboolean")
  (parameters
    '("GdkCrossingMode*" "mode")
  )
)

(define-method get_crossing_detail
  (of-object "GdkEvent")
  (c-name "gdk_event_get_crossing_detail")
  (return-type "gboolean")
  (parameters
    '("GdkNotifyType*" "detail")
  )
)

(define-method get_touchpad_gesture_phase
  (of-object "GdkEvent")
  (c-name "gdk_event_get_touchpad_gesture_phase")
  (return-type "gboolean")
  (parameters
    '("GdkTouchpadGesturePhase*" "phase")
  )
)

(define-method get_touchpad_gesture_n_fingers
  (of-object "GdkEvent")
  (c-name "gdk_event_get_touchpad_gesture_n_fingers")
  (return-type "gboolean")
  (parameters
    '("guint*" "n_fingers")
  )
)

(define-method get_touchpad_deltas
  (of-object "GdkEvent")
  (c-name "gdk_event_get_touchpad_deltas")
  (return-type "gboolean")
  (parameters
    '("double*" "dx")
    '("double*" "dy")
  )
)

(define-method get_touchpad_angle_delta
  (of-object "GdkEvent")
  (c-name "gdk_event_get_touchpad_angle_delta")
  (return-type "gboolean")
  (parameters
    '("double*" "delta")
  )
)

(define-method get_touchpad_scale
  (of-object "GdkEvent")
  (c-name "gdk_event_get_touchpad_scale")
  (return-type "gboolean")
  (parameters
    '("double*" "scale")
  )
)

(define-method get_touch_emulating_pointer
  (of-object "GdkEvent")
  (c-name "gdk_event_get_touch_emulating_pointer")
  (return-type "gboolean")
  (parameters
    '("gboolean*" "emulating")
  )
)

(define-method get_grab_window
  (of-object "GdkEvent")
  (c-name "gdk_event_get_grab_window")
  (return-type "gboolean")
  (parameters
    '("GdkWindow**" "window")
  )
)

(define-method get_focus_in
  (of-object "GdkEvent")
  (c-name "gdk_event_get_focus_in")
  (return-type "gboolean")
  (parameters
    '("gboolean*" "focus_in")
  )
)

(define-method get_pad_group_mode
  (of-object "GdkEvent")
  (c-name "gdk_event_get_pad_group_mode")
  (return-type "gboolean")
  (parameters
    '("guint*" "group")
    '("guint*" "mode")
  )
)

(define-method get_pad_button
  (of-object "GdkEvent")
  (c-name "gdk_event_get_pad_button")
  (return-type "gboolean")
  (parameters
    '("guint*" "button")
  )
)

(define-method get_pad_axis_value
  (of-object "GdkEvent")
  (c-name "gdk_event_get_pad_axis_value")
  (return-type "gboolean")
  (parameters
    '("guint*" "index")
    '("gdouble*" "value")
  )
)

(define-method get_axes
  (of-object "GdkEvent")
  (c-name "gdk_event_get_axes")
  (return-type "gboolean")
  (parameters
    '("gdouble**" "axes")
    '("guint*" "n_axes")
  )
)

(define-method get_motion_history
  (of-object "GdkEvent")
  (c-name "gdk_event_get_motion_history")
  (return-type "GList*")
)



;; From gdkframeclock.h

(define-function gdk_frame_clock_get_type
  (c-name "gdk_frame_clock_get_type")
  (return-type "GType")
)

(define-method get_frame_time
  (of-object "GdkFrameClock")
  (c-name "gdk_frame_clock_get_frame_time")
  (return-type "gint64")
)

(define-method request_phase
  (of-object "GdkFrameClock")
  (c-name "gdk_frame_clock_request_phase")
  (return-type "none")
  (parameters
    '("GdkFrameClockPhase" "phase")
  )
)

(define-method begin_updating
  (of-object "GdkFrameClock")
  (c-name "gdk_frame_clock_begin_updating")
  (return-type "none")
)

(define-method end_updating
  (of-object "GdkFrameClock")
  (c-name "gdk_frame_clock_end_updating")
  (return-type "none")
)

(define-method get_frame_counter
  (of-object "GdkFrameClock")
  (c-name "gdk_frame_clock_get_frame_counter")
  (return-type "gint64")
)

(define-method get_history_start
  (of-object "GdkFrameClock")
  (c-name "gdk_frame_clock_get_history_start")
  (return-type "gint64")
)

(define-method get_timings
  (of-object "GdkFrameClock")
  (c-name "gdk_frame_clock_get_timings")
  (return-type "GdkFrameTimings*")
  (parameters
    '("gint64" "frame_counter")
  )
)

(define-method get_current_timings
  (of-object "GdkFrameClock")
  (c-name "gdk_frame_clock_get_current_timings")
  (return-type "GdkFrameTimings*")
)

(define-method get_refresh_info
  (of-object "GdkFrameClock")
  (c-name "gdk_frame_clock_get_refresh_info")
  (return-type "none")
  (parameters
    '("gint64" "base_time")
    '("gint64*" "refresh_interval_return")
    '("gint64*" "presentation_time_return")
  )
)



;; From gdkframeclockidle.h

(define-function gdk_frame_clock_idle_get_type
  (c-name "gdk_frame_clock_idle_get_type")
  (return-type "GType")
)



;; From gdkframetimings.h

(define-function gdk_frame_timings_get_type
  (c-name "gdk_frame_timings_get_type")
  (return-type "GType")
)

(define-method ref
  (of-object "GdkFrameTimings")
  (c-name "gdk_frame_timings_ref")
  (return-type "GdkFrameTimings*")
)

(define-method unref
  (of-object "GdkFrameTimings")
  (c-name "gdk_frame_timings_unref")
  (return-type "none")
)

(define-method get_frame_counter
  (of-object "GdkFrameTimings")
  (c-name "gdk_frame_timings_get_frame_counter")
  (return-type "gint64")
)

(define-method get_complete
  (of-object "GdkFrameTimings")
  (c-name "gdk_frame_timings_get_complete")
  (return-type "gboolean")
)

(define-method get_frame_time
  (of-object "GdkFrameTimings")
  (c-name "gdk_frame_timings_get_frame_time")
  (return-type "gint64")
)

(define-method get_presentation_time
  (of-object "GdkFrameTimings")
  (c-name "gdk_frame_timings_get_presentation_time")
  (return-type "gint64")
)

(define-method get_refresh_interval
  (of-object "GdkFrameTimings")
  (c-name "gdk_frame_timings_get_refresh_interval")
  (return-type "gint64")
)

(define-method get_predicted_presentation_time
  (of-object "GdkFrameTimings")
  (c-name "gdk_frame_timings_get_predicted_presentation_time")
  (return-type "gint64")
)



;; From gdkglcontext.h

(define-function gdk_gl_error_quark
  (c-name "gdk_gl_error_quark")
  (return-type "GQuark")
)

(define-function gdk_gl_context_get_type
  (c-name "gdk_gl_context_get_type")
  (return-type "GType")
)

(define-method get_display
  (of-object "GdkGLContext")
  (c-name "gdk_gl_context_get_display")
  (return-type "GdkDisplay*")
)

(define-method get_window
  (of-object "GdkGLContext")
  (c-name "gdk_gl_context_get_window")
  (return-type "GdkWindow*")
)

(define-method get_shared_context
  (of-object "GdkGLContext")
  (c-name "gdk_gl_context_get_shared_context")
  (return-type "GdkGLContext*")
)

(define-method get_version
  (of-object "GdkGLContext")
  (c-name "gdk_gl_context_get_version")
  (return-type "none")
  (parameters
    '("int*" "major")
    '("int*" "minor")
  )
)

(define-method is_legacy
  (of-object "GdkGLContext")
  (c-name "gdk_gl_context_is_legacy")
  (return-type "gboolean")
)

(define-method set_required_version
  (of-object "GdkGLContext")
  (c-name "gdk_gl_context_set_required_version")
  (return-type "none")
  (parameters
    '("int" "major")
    '("int" "minor")
  )
)

(define-method get_required_version
  (of-object "GdkGLContext")
  (c-name "gdk_gl_context_get_required_version")
  (return-type "none")
  (parameters
    '("int*" "major")
    '("int*" "minor")
  )
)

(define-method set_debug_enabled
  (of-object "GdkGLContext")
  (c-name "gdk_gl_context_set_debug_enabled")
  (return-type "none")
  (parameters
    '("gboolean" "enabled")
  )
)

(define-method get_debug_enabled
  (of-object "GdkGLContext")
  (c-name "gdk_gl_context_get_debug_enabled")
  (return-type "gboolean")
)

(define-method set_forward_compatible
  (of-object "GdkGLContext")
  (c-name "gdk_gl_context_set_forward_compatible")
  (return-type "none")
  (parameters
    '("gboolean" "compatible")
  )
)

(define-method get_forward_compatible
  (of-object "GdkGLContext")
  (c-name "gdk_gl_context_get_forward_compatible")
  (return-type "gboolean")
)

(define-method set_use_es
  (of-object "GdkGLContext")
  (c-name "gdk_gl_context_set_use_es")
  (return-type "none")
  (parameters
    '("int" "use_es")
  )
)

(define-method get_use_es
  (of-object "GdkGLContext")
  (c-name "gdk_gl_context_get_use_es")
  (return-type "gboolean")
)

(define-method realize
  (of-object "GdkGLContext")
  (c-name "gdk_gl_context_realize")
  (return-type "gboolean")
  (parameters
    '("GError**" "error")
  )
)

(define-method get_damage
  (of-object "GdkGLContext")
  (c-name "gdk_gl_context_get_damage")
  (return-type "cairo_region_t*")
)

(define-method make_current
  (of-object "GdkGLContext")
  (c-name "gdk_gl_context_make_current")
  (return-type "none")
)

(define-function gdk_gl_context_get_current
  (c-name "gdk_gl_context_get_current")
  (return-type "GdkGLContext*")
)

(define-function gdk_gl_context_clear_current
  (c-name "gdk_gl_context_clear_current")
  (return-type "none")
)



;; From gdk.h



;; From gdkintl.h



;; From gdkkeys.h

(define-function gdk_keymap_get_type
  (c-name "gdk_keymap_get_type")
  (return-type "GType")
)

(define-method get_display
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_get_display")
  (return-type "GdkDisplay*")
)

(define-method lookup_key
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_lookup_key")
  (return-type "guint")
  (parameters
    '("const-GdkKeymapKey*" "key")
  )
)

(define-method translate_keyboard_state
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_translate_keyboard_state")
  (return-type "gboolean")
  (parameters
    '("guint" "hardware_keycode")
    '("GdkModifierType" "state")
    '("gint" "group")
    '("guint*" "keyval")
    '("gint*" "effective_group")
    '("gint*" "level")
    '("GdkModifierType*" "consumed_modifiers")
  )
)

(define-method get_entries_for_keyval
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_get_entries_for_keyval")
  (return-type "gboolean")
  (parameters
    '("guint" "keyval")
    '("GdkKeymapKey**" "keys")
    '("gint*" "n_keys")
  )
)

(define-method get_entries_for_keycode
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_get_entries_for_keycode")
  (return-type "gboolean")
  (parameters
    '("guint" "hardware_keycode")
    '("GdkKeymapKey**" "keys")
    '("guint**" "keyvals")
    '("gint*" "n_entries")
  )
)

(define-method get_direction
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_get_direction")
  (return-type "PangoDirection")
)

(define-method have_bidi_layouts
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_have_bidi_layouts")
  (return-type "gboolean")
)

(define-method get_caps_lock_state
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_get_caps_lock_state")
  (return-type "gboolean")
)

(define-method get_num_lock_state
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_get_num_lock_state")
  (return-type "gboolean")
)

(define-method get_scroll_lock_state
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_get_scroll_lock_state")
  (return-type "gboolean")
)

(define-method get_modifier_state
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_get_modifier_state")
  (return-type "guint")
)

(define-method add_virtual_modifiers
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_add_virtual_modifiers")
  (return-type "none")
  (parameters
    '("GdkModifierType*" "state")
  )
)

(define-method map_virtual_modifiers
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_map_virtual_modifiers")
  (return-type "gboolean")
  (parameters
    '("GdkModifierType*" "state")
  )
)

(define-method get_modifier_mask
  (of-object "GdkKeymap")
  (c-name "gdk_keymap_get_modifier_mask")
  (return-type "GdkModifierType")
  (parameters
    '("GdkModifierIntent" "intent")
  )
)

(define-function gdk_keyval_name
  (c-name "gdk_keyval_name")
  (return-type "gchar*")
  (parameters
    '("guint" "keyval")
  )
)

(define-function gdk_keyval_from_name
  (c-name "gdk_keyval_from_name")
  (return-type "guint")
  (parameters
    '("const-gchar*" "keyval_name")
  )
)

(define-function gdk_keyval_convert_case
  (c-name "gdk_keyval_convert_case")
  (return-type "none")
  (parameters
    '("guint" "symbol")
    '("guint*" "lower")
    '("guint*" "upper")
  )
)

(define-function gdk_keyval_to_upper
  (c-name "gdk_keyval_to_upper")
  (return-type "guint")
  (parameters
    '("guint" "keyval")
  )
)

(define-function gdk_keyval_to_lower
  (c-name "gdk_keyval_to_lower")
  (return-type "guint")
  (parameters
    '("guint" "keyval")
  )
)

(define-function gdk_keyval_is_upper
  (c-name "gdk_keyval_is_upper")
  (return-type "gboolean")
  (parameters
    '("guint" "keyval")
  )
)

(define-function gdk_keyval_is_lower
  (c-name "gdk_keyval_is_lower")
  (return-type "gboolean")
  (parameters
    '("guint" "keyval")
  )
)

(define-function gdk_keyval_to_unicode
  (c-name "gdk_keyval_to_unicode")
  (return-type "guint32")
  (parameters
    '("guint" "keyval")
  )
)

(define-function gdk_unicode_to_keyval
  (c-name "gdk_unicode_to_keyval")
  (return-type "guint")
  (parameters
    '("guint32" "wc")
  )
)



;; From gdkkeysyms.h



;; From gdkmonitor.h

(define-function gdk_monitor_get_type
  (c-name "gdk_monitor_get_type")
  (return-type "GType")
)

(define-method get_display
  (of-object "GdkMonitor")
  (c-name "gdk_monitor_get_display")
  (return-type "GdkDisplay*")
)

(define-method get_geometry
  (of-object "GdkMonitor")
  (c-name "gdk_monitor_get_geometry")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "geometry")
  )
)

(define-method get_workarea
  (of-object "GdkMonitor")
  (c-name "gdk_monitor_get_workarea")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "workarea")
  )
)

(define-method get_width_mm
  (of-object "GdkMonitor")
  (c-name "gdk_monitor_get_width_mm")
  (return-type "int")
)

(define-method get_height_mm
  (of-object "GdkMonitor")
  (c-name "gdk_monitor_get_height_mm")
  (return-type "int")
)

(define-method get_manufacturer
  (of-object "GdkMonitor")
  (c-name "gdk_monitor_get_manufacturer")
  (return-type "const-char*")
)

(define-method get_model
  (of-object "GdkMonitor")
  (c-name "gdk_monitor_get_model")
  (return-type "const-char*")
)

(define-method get_scale_factor
  (of-object "GdkMonitor")
  (c-name "gdk_monitor_get_scale_factor")
  (return-type "int")
)

(define-method get_refresh_rate
  (of-object "GdkMonitor")
  (c-name "gdk_monitor_get_refresh_rate")
  (return-type "int")
)

(define-method get_subpixel_layout
  (of-object "GdkMonitor")
  (c-name "gdk_monitor_get_subpixel_layout")
  (return-type "GdkSubpixelLayout")
)

(define-method is_primary
  (of-object "GdkMonitor")
  (c-name "gdk_monitor_is_primary")
  (return-type "gboolean")
)

(define-method is_valid
  (of-object "GdkMonitor")
  (c-name "gdk_monitor_is_valid")
  (return-type "gboolean")
)



;; From gdkpango.h

(define-function gdk_pango_layout_line_get_clip_region
  (c-name "gdk_pango_layout_line_get_clip_region")
  (return-type "cairo_region_t*")
  (parameters
    '("PangoLayoutLine*" "line")
    '("gint" "x_origin")
    '("gint" "y_origin")
    '("const-gint*" "index_ranges")
    '("gint" "n_ranges")
  )
)

(define-function gdk_pango_layout_get_clip_region
  (c-name "gdk_pango_layout_get_clip_region")
  (return-type "cairo_region_t*")
  (parameters
    '("PangoLayout*" "layout")
    '("gint" "x_origin")
    '("gint" "y_origin")
    '("const-gint*" "index_ranges")
    '("gint" "n_ranges")
  )
)



;; From gdkpixbuf.h

(define-function gdk_pixbuf_get_from_surface
  (c-name "gdk_pixbuf_get_from_surface")
  (return-type "GdkPixbuf*")
  (parameters
    '("cairo_surface_t*" "surface")
    '("gint" "src_x")
    '("gint" "src_y")
    '("gint" "width")
    '("gint" "height")
  )
)



;; From gdkproperty.h

(define-function gdk_text_property_to_utf8_list_for_display
  (c-name "gdk_text_property_to_utf8_list_for_display")
  (return-type "gint")
  (parameters
    '("GdkDisplay*" "display")
    '("GdkAtom" "encoding")
    '("gint" "format")
    '("const-guchar*" "text")
    '("gint" "length")
    '("gchar***" "list")
  )
)

(define-function gdk_utf8_to_string_target
  (c-name "gdk_utf8_to_string_target")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "str")
  )
)



;; From gdkrectangle.h

(define-method intersect
  (of-object "GdkRectangle")
  (c-name "gdk_rectangle_intersect")
  (return-type "gboolean")
  (parameters
    '("const-GdkRectangle*" "src2")
    '("GdkRectangle*" "dest")
  )
)

(define-method union
  (of-object "GdkRectangle")
  (c-name "gdk_rectangle_union")
  (return-type "none")
  (parameters
    '("const-GdkRectangle*" "src2")
    '("GdkRectangle*" "dest")
  )
)

(define-method equal
  (of-object "GdkRectangle")
  (c-name "gdk_rectangle_equal")
  (return-type "gboolean")
  (parameters
    '("const-GdkRectangle*" "rect2")
  )
)

(define-method contains_point
  (of-object "GdkRectangle")
  (c-name "gdk_rectangle_contains_point")
  (return-type "gboolean")
  (parameters
    '("int" "x")
    '("int" "y")
  )
)

(define-function gdk_rectangle_get_type
  (c-name "gdk_rectangle_get_type")
  (return-type "GType")
)



;; From gdkrgba.h

(define-function gdk_rgba_get_type
  (c-name "gdk_rgba_get_type")
  (return-type "GType")
)

(define-method copy
  (of-object "GdkRGBA")
  (c-name "gdk_rgba_copy")
  (return-type "GdkRGBA*")
)

(define-method free
  (of-object "GdkRGBA")
  (c-name "gdk_rgba_free")
  (return-type "none")
)

(define-method is_clear
  (of-object "GdkRGBA")
  (c-name "gdk_rgba_is_clear")
  (return-type "gboolean")
)

(define-method is_opaque
  (of-object "GdkRGBA")
  (c-name "gdk_rgba_is_opaque")
  (return-type "gboolean")
)

(define-function gdk_rgba_hash
  (c-name "gdk_rgba_hash")
  (return-type "guint")
  (parameters
    '("gconstpointer" "p")
  )
)

(define-function gdk_rgba_equal
  (c-name "gdk_rgba_equal")
  (return-type "gboolean")
  (parameters
    '("gconstpointer" "p1")
    '("gconstpointer" "p2")
  )
)

(define-method parse
  (of-object "GdkRGBA")
  (c-name "gdk_rgba_parse")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "spec")
  )
)

(define-method to_string
  (of-object "GdkRGBA")
  (c-name "gdk_rgba_to_string")
  (return-type "gchar*")
)



;; From gdkseat.h

(define-function gdk_seat_get_type
  (c-name "gdk_seat_get_type")
  (return-type "GType")
)

(define-method grab
  (of-object "GdkSeat")
  (c-name "gdk_seat_grab")
  (return-type "GdkGrabStatus")
  (parameters
    '("GdkWindow*" "window")
    '("GdkSeatCapabilities" "capabilities")
    '("gboolean" "owner_events")
    '("GdkCursor*" "cursor")
    '("const-GdkEvent*" "event")
    '("GdkSeatGrabPrepareFunc" "prepare_func")
    '("gpointer" "prepare_func_data")
  )
)

(define-method ungrab
  (of-object "GdkSeat")
  (c-name "gdk_seat_ungrab")
  (return-type "none")
)

(define-method get_display
  (of-object "GdkSeat")
  (c-name "gdk_seat_get_display")
  (return-type "GdkDisplay*")
)

(define-method get_capabilities
  (of-object "GdkSeat")
  (c-name "gdk_seat_get_capabilities")
  (return-type "GdkSeatCapabilities")
)

(define-method get_slaves
  (of-object "GdkSeat")
  (c-name "gdk_seat_get_slaves")
  (return-type "GList*")
  (parameters
    '("GdkSeatCapabilities" "capabilities")
  )
)

(define-method get_pointer
  (of-object "GdkSeat")
  (c-name "gdk_seat_get_pointer")
  (return-type "GdkDevice*")
)

(define-method get_keyboard
  (of-object "GdkSeat")
  (c-name "gdk_seat_get_keyboard")
  (return-type "GdkDevice*")
)

(define-method get_master_pointers
  (of-object "GdkSeat")
  (c-name "gdk_seat_get_master_pointers")
  (return-type "GList*")
  (parameters
    '("GdkSeatCapabilities" "capabilities")
  )
)



;; From gdktexture.h

(define-function gdk_texture_new_for_data
  (c-name "gdk_texture_new_for_data")
  (return-type "GdkTexture*")
  (parameters
    '("const-guchar*" "data")
    '("int" "width")
    '("int" "height")
    '("int" "stride")
  )
)

(define-function gdk_texture_new_for_pixbuf
  (c-name "gdk_texture_new_for_pixbuf")
  (return-type "GdkTexture*")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-function gdk_texture_new_from_resource
  (c-name "gdk_texture_new_from_resource")
  (return-type "GdkTexture*")
  (parameters
    '("const-char*" "resource_path")
  )
)

(define-function gdk_texture_new_from_file
  (c-name "gdk_texture_new_from_file")
  (return-type "GdkTexture*")
  (parameters
    '("GFile*" "file")
    '("GError**" "error")
  )
)

(define-function gdk_texture_new_for_gl
  (c-name "gdk_texture_new_for_gl")
  (return-type "GdkTexture*")
  (parameters
    '("GdkGLContext*" "context")
    '("guint" "id")
    '("int" "width")
    '("int" "height")
    '("GDestroyNotify" "destroy")
    '("gpointer" "data")
  )
)

(define-method release_gl
  (of-object "GdkTexture")
  (c-name "gdk_texture_release_gl")
  (return-type "none")
)

(define-method get_width
  (of-object "GdkTexture")
  (c-name "gdk_texture_get_width")
  (return-type "int")
)

(define-method get_height
  (of-object "GdkTexture")
  (c-name "gdk_texture_get_height")
  (return-type "int")
)

(define-method download
  (of-object "GdkTexture")
  (c-name "gdk_texture_download")
  (return-type "none")
  (parameters
    '("guchar*" "data")
    '("gsize" "stride")
  )
)



;; From gdktypes.h



;; From gdkvulkancontext.h

(define-function gdk_vulkan_error_quark
  (c-name "gdk_vulkan_error_quark")
  (return-type "GQuark")
)

(define-function gdk_vulkan_context_get_type
  (c-name "gdk_vulkan_context_get_type")
  (return-type "GType")
)

(define-function gdk_vulkan_strerror
  (c-name "gdk_vulkan_strerror")
  (return-type "const-char*")
  (parameters
    '("VkResult" "result")
  )
)

(define-method get_instance
  (of-object "GdkVulkanContext")
  (c-name "gdk_vulkan_context_get_instance")
  (return-type "VkInstance")
)

(define-method get_physical_device
  (of-object "GdkVulkanContext")
  (c-name "gdk_vulkan_context_get_physical_device")
  (return-type "VkPhysicalDevice")
)

(define-method get_device
  (of-object "GdkVulkanContext")
  (c-name "gdk_vulkan_context_get_device")
  (return-type "VkDevice")
)

(define-method get_queue
  (of-object "GdkVulkanContext")
  (c-name "gdk_vulkan_context_get_queue")
  (return-type "VkQueue")
)

(define-method get_queue_family_index
  (of-object "GdkVulkanContext")
  (c-name "gdk_vulkan_context_get_queue_family_index")
  (return-type "uint32_t")
)

(define-method get_image_format
  (of-object "GdkVulkanContext")
  (c-name "gdk_vulkan_context_get_image_format")
  (return-type "VkFormat")
)

(define-method get_n_images
  (of-object "GdkVulkanContext")
  (c-name "gdk_vulkan_context_get_n_images")
  (return-type "uint32_t")
)

(define-method get_image
  (of-object "GdkVulkanContext")
  (c-name "gdk_vulkan_context_get_image")
  (return-type "VkImage")
  (parameters
    '("guint" "id")
  )
)

(define-method get_draw_index
  (of-object "GdkVulkanContext")
  (c-name "gdk_vulkan_context_get_draw_index")
  (return-type "uint32_t")
)

(define-method get_draw_semaphore
  (of-object "GdkVulkanContext")
  (c-name "gdk_vulkan_context_get_draw_semaphore")
  (return-type "VkSemaphore")
)



;; From gdkwindow.h

(define-function gdk_window_get_type
  (c-name "gdk_window_get_type")
  (return-type "GType")
)

(define-function gdk_window_new_toplevel
  (c-name "gdk_window_new_toplevel")
  (return-type "GdkWindow*")
  (parameters
    '("GdkDisplay*" "display")
    '("int" "width")
    '("int" "height")
  )
)

(define-function gdk_window_new_popup
  (c-name "gdk_window_new_popup")
  (return-type "GdkWindow*")
  (parameters
    '("GdkDisplay*" "display")
    '("const-GdkRectangle*" "position")
  )
)

(define-function gdk_window_new_temp
  (c-name "gdk_window_new_temp")
  (return-type "GdkWindow*")
  (parameters
    '("GdkDisplay*" "display")
  )
)

(define-method new_child
  (of-object "GdkWindow")
  (c-name "gdk_window_new_child")
  (return-type "GdkWindow*")
  (parameters
    '("const-GdkRectangle*" "position")
  )
)

(define-method destroy
  (of-object "GdkWindow")
  (c-name "gdk_window_destroy")
  (return-type "none")
)

(define-method get_window_type
  (of-object "GdkWindow")
  (c-name "gdk_window_get_window_type")
  (return-type "GdkWindowType")
)

(define-method is_destroyed
  (of-object "GdkWindow")
  (c-name "gdk_window_is_destroyed")
  (return-type "gboolean")
)

(define-method get_display
  (of-object "GdkWindow")
  (c-name "gdk_window_get_display")
  (return-type "GdkDisplay*")
)

(define-method show
  (of-object "GdkWindow")
  (c-name "gdk_window_show")
  (return-type "none")
)

(define-method hide
  (of-object "GdkWindow")
  (c-name "gdk_window_hide")
  (return-type "none")
)

(define-method withdraw
  (of-object "GdkWindow")
  (c-name "gdk_window_withdraw")
  (return-type "none")
)

(define-method show_unraised
  (of-object "GdkWindow")
  (c-name "gdk_window_show_unraised")
  (return-type "none")
)

(define-method move
  (of-object "GdkWindow")
  (c-name "gdk_window_move")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
)

(define-method resize
  (of-object "GdkWindow")
  (c-name "gdk_window_resize")
  (return-type "none")
  (parameters
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method move_resize
  (of-object "GdkWindow")
  (c-name "gdk_window_move_resize")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method raise
  (of-object "GdkWindow")
  (c-name "gdk_window_raise")
  (return-type "none")
)

(define-method lower
  (of-object "GdkWindow")
  (c-name "gdk_window_lower")
  (return-type "none")
)

(define-method restack
  (of-object "GdkWindow")
  (c-name "gdk_window_restack")
  (return-type "none")
  (parameters
    '("GdkWindow*" "sibling")
    '("gboolean" "above")
  )
)

(define-method focus
  (of-object "GdkWindow")
  (c-name "gdk_window_focus")
  (return-type "none")
  (parameters
    '("guint32" "timestamp")
  )
)

(define-method set_user_data
  (of-object "GdkWindow")
  (c-name "gdk_window_set_user_data")
  (return-type "none")
  (parameters
    '("gpointer" "user_data")
  )
)

(define-method get_accept_focus
  (of-object "GdkWindow")
  (c-name "gdk_window_get_accept_focus")
  (return-type "gboolean")
)

(define-method set_accept_focus
  (of-object "GdkWindow")
  (c-name "gdk_window_set_accept_focus")
  (return-type "none")
  (parameters
    '("gboolean" "accept_focus")
  )
)

(define-method get_focus_on_map
  (of-object "GdkWindow")
  (c-name "gdk_window_get_focus_on_map")
  (return-type "gboolean")
)

(define-method set_focus_on_map
  (of-object "GdkWindow")
  (c-name "gdk_window_set_focus_on_map")
  (return-type "none")
  (parameters
    '("gboolean" "focus_on_map")
  )
)

(define-method add_filter
  (of-object "GdkWindow")
  (c-name "gdk_window_add_filter")
  (return-type "none")
  (parameters
    '("GdkFilterFunc" "function")
    '("gpointer" "data")
  )
)

(define-method remove_filter
  (of-object "GdkWindow")
  (c-name "gdk_window_remove_filter")
  (return-type "none")
  (parameters
    '("GdkFilterFunc" "function")
    '("gpointer" "data")
  )
)

(define-method scroll
  (of-object "GdkWindow")
  (c-name "gdk_window_scroll")
  (return-type "none")
  (parameters
    '("gint" "dx")
    '("gint" "dy")
  )
)

(define-method move_region
  (of-object "GdkWindow")
  (c-name "gdk_window_move_region")
  (return-type "none")
  (parameters
    '("const-cairo_region_t*" "region")
    '("gint" "dx")
    '("gint" "dy")
  )
)

(define-method shape_combine_region
  (of-object "GdkWindow")
  (c-name "gdk_window_shape_combine_region")
  (return-type "none")
  (parameters
    '("const-cairo_region_t*" "shape_region")
    '("gint" "offset_x")
    '("gint" "offset_y")
  )
)

(define-method set_child_shapes
  (of-object "GdkWindow")
  (c-name "gdk_window_set_child_shapes")
  (return-type "none")
)

(define-method merge_child_shapes
  (of-object "GdkWindow")
  (c-name "gdk_window_merge_child_shapes")
  (return-type "none")
)

(define-method input_shape_combine_region
  (of-object "GdkWindow")
  (c-name "gdk_window_input_shape_combine_region")
  (return-type "none")
  (parameters
    '("const-cairo_region_t*" "shape_region")
    '("gint" "offset_x")
    '("gint" "offset_y")
  )
)

(define-method set_child_input_shapes
  (of-object "GdkWindow")
  (c-name "gdk_window_set_child_input_shapes")
  (return-type "none")
)

(define-method merge_child_input_shapes
  (of-object "GdkWindow")
  (c-name "gdk_window_merge_child_input_shapes")
  (return-type "none")
)

(define-method set_pass_through
  (of-object "GdkWindow")
  (c-name "gdk_window_set_pass_through")
  (return-type "none")
  (parameters
    '("gboolean" "pass_through")
  )
)

(define-method get_pass_through
  (of-object "GdkWindow")
  (c-name "gdk_window_get_pass_through")
  (return-type "gboolean")
)

(define-method is_visible
  (of-object "GdkWindow")
  (c-name "gdk_window_is_visible")
  (return-type "gboolean")
)

(define-method is_viewable
  (of-object "GdkWindow")
  (c-name "gdk_window_is_viewable")
  (return-type "gboolean")
)

(define-method is_input_only
  (of-object "GdkWindow")
  (c-name "gdk_window_is_input_only")
  (return-type "gboolean")
)

(define-method is_shaped
  (of-object "GdkWindow")
  (c-name "gdk_window_is_shaped")
  (return-type "gboolean")
)

(define-method get_state
  (of-object "GdkWindow")
  (c-name "gdk_window_get_state")
  (return-type "GdkWindowState")
)

(define-method has_native
  (of-object "GdkWindow")
  (c-name "gdk_window_has_native")
  (return-type "gboolean")
)

(define-method set_type_hint
  (of-object "GdkWindow")
  (c-name "gdk_window_set_type_hint")
  (return-type "none")
  (parameters
    '("GdkWindowTypeHint" "hint")
  )
)

(define-method get_type_hint
  (of-object "GdkWindow")
  (c-name "gdk_window_get_type_hint")
  (return-type "GdkWindowTypeHint")
)

(define-method get_modal_hint
  (of-object "GdkWindow")
  (c-name "gdk_window_get_modal_hint")
  (return-type "gboolean")
)

(define-method set_modal_hint
  (of-object "GdkWindow")
  (c-name "gdk_window_set_modal_hint")
  (return-type "none")
  (parameters
    '("gboolean" "modal")
  )
)

(define-method set_skip_taskbar_hint
  (of-object "GdkWindow")
  (c-name "gdk_window_set_skip_taskbar_hint")
  (return-type "none")
  (parameters
    '("gboolean" "skips_taskbar")
  )
)

(define-method set_skip_pager_hint
  (of-object "GdkWindow")
  (c-name "gdk_window_set_skip_pager_hint")
  (return-type "none")
  (parameters
    '("gboolean" "skips_pager")
  )
)

(define-method set_urgency_hint
  (of-object "GdkWindow")
  (c-name "gdk_window_set_urgency_hint")
  (return-type "none")
  (parameters
    '("gboolean" "urgent")
  )
)

(define-method set_geometry_hints
  (of-object "GdkWindow")
  (c-name "gdk_window_set_geometry_hints")
  (return-type "none")
  (parameters
    '("const-GdkGeometry*" "geometry")
    '("GdkWindowHints" "geom_mask")
  )
)

(define-method get_clip_region
  (of-object "GdkWindow")
  (c-name "gdk_window_get_clip_region")
  (return-type "cairo_region_t*")
)

(define-method get_visible_region
  (of-object "GdkWindow")
  (c-name "gdk_window_get_visible_region")
  (return-type "cairo_region_t*")
)

(define-method begin_draw_frame
  (of-object "GdkWindow")
  (c-name "gdk_window_begin_draw_frame")
  (return-type "GdkDrawingContext*")
  (parameters
    '("GdkDrawContext*" "context")
    '("const-cairo_region_t*" "region")
  )
)

(define-method end_draw_frame
  (of-object "GdkWindow")
  (c-name "gdk_window_end_draw_frame")
  (return-type "none")
  (parameters
    '("GdkDrawingContext*" "context")
  )
)

(define-method set_title
  (of-object "GdkWindow")
  (c-name "gdk_window_set_title")
  (return-type "none")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method set_role
  (of-object "GdkWindow")
  (c-name "gdk_window_set_role")
  (return-type "none")
  (parameters
    '("const-gchar*" "role")
  )
)

(define-method set_startup_id
  (of-object "GdkWindow")
  (c-name "gdk_window_set_startup_id")
  (return-type "none")
  (parameters
    '("const-gchar*" "startup_id")
  )
)

(define-method set_transient_for
  (of-object "GdkWindow")
  (c-name "gdk_window_set_transient_for")
  (return-type "none")
  (parameters
    '("GdkWindow*" "parent")
  )
)

(define-method set_cursor
  (of-object "GdkWindow")
  (c-name "gdk_window_set_cursor")
  (return-type "none")
  (parameters
    '("GdkCursor*" "cursor")
  )
)

(define-method get_cursor
  (of-object "GdkWindow")
  (c-name "gdk_window_get_cursor")
  (return-type "GdkCursor*")
)

(define-method set_device_cursor
  (of-object "GdkWindow")
  (c-name "gdk_window_set_device_cursor")
  (return-type "none")
  (parameters
    '("GdkDevice*" "device")
    '("GdkCursor*" "cursor")
  )
)

(define-method get_device_cursor
  (of-object "GdkWindow")
  (c-name "gdk_window_get_device_cursor")
  (return-type "GdkCursor*")
  (parameters
    '("GdkDevice*" "device")
  )
)

(define-method get_user_data
  (of-object "GdkWindow")
  (c-name "gdk_window_get_user_data")
  (return-type "none")
  (parameters
    '("gpointer*" "data")
  )
)

(define-method get_geometry
  (of-object "GdkWindow")
  (c-name "gdk_window_get_geometry")
  (return-type "none")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
    '("gint*" "width")
    '("gint*" "height")
  )
)

(define-method get_width
  (of-object "GdkWindow")
  (c-name "gdk_window_get_width")
  (return-type "int")
)

(define-method get_height
  (of-object "GdkWindow")
  (c-name "gdk_window_get_height")
  (return-type "int")
)

(define-method get_position
  (of-object "GdkWindow")
  (c-name "gdk_window_get_position")
  (return-type "none")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
  )
)

(define-method get_origin
  (of-object "GdkWindow")
  (c-name "gdk_window_get_origin")
  (return-type "gint")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
  )
)

(define-method get_root_coords
  (of-object "GdkWindow")
  (c-name "gdk_window_get_root_coords")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint*" "root_x")
    '("gint*" "root_y")
  )
)

(define-method coords_to_parent
  (of-object "GdkWindow")
  (c-name "gdk_window_coords_to_parent")
  (return-type "none")
  (parameters
    '("gdouble" "x")
    '("gdouble" "y")
    '("gdouble*" "parent_x")
    '("gdouble*" "parent_y")
  )
)

(define-method coords_from_parent
  (of-object "GdkWindow")
  (c-name "gdk_window_coords_from_parent")
  (return-type "none")
  (parameters
    '("gdouble" "parent_x")
    '("gdouble" "parent_y")
    '("gdouble*" "x")
    '("gdouble*" "y")
  )
)

(define-method get_root_origin
  (of-object "GdkWindow")
  (c-name "gdk_window_get_root_origin")
  (return-type "none")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
  )
)

(define-method get_frame_extents
  (of-object "GdkWindow")
  (c-name "gdk_window_get_frame_extents")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "rect")
  )
)

(define-method get_scale_factor
  (of-object "GdkWindow")
  (c-name "gdk_window_get_scale_factor")
  (return-type "gint")
)

(define-method get_device_position
  (of-object "GdkWindow")
  (c-name "gdk_window_get_device_position")
  (return-type "GdkWindow*")
  (parameters
    '("GdkDevice*" "device")
    '("gint*" "x")
    '("gint*" "y")
    '("GdkModifierType*" "mask")
  )
)

(define-method get_device_position_double
  (of-object "GdkWindow")
  (c-name "gdk_window_get_device_position_double")
  (return-type "GdkWindow*")
  (parameters
    '("GdkDevice*" "device")
    '("gdouble*" "x")
    '("gdouble*" "y")
    '("GdkModifierType*" "mask")
  )
)

(define-method get_parent
  (of-object "GdkWindow")
  (c-name "gdk_window_get_parent")
  (return-type "GdkWindow*")
)

(define-method get_toplevel
  (of-object "GdkWindow")
  (c-name "gdk_window_get_toplevel")
  (return-type "GdkWindow*")
)

(define-method get_children
  (of-object "GdkWindow")
  (c-name "gdk_window_get_children")
  (return-type "GList*")
)

(define-method peek_children
  (of-object "GdkWindow")
  (c-name "gdk_window_peek_children")
  (return-type "GList*")
)

(define-method get_children_with_user_data
  (of-object "GdkWindow")
  (c-name "gdk_window_get_children_with_user_data")
  (return-type "GList*")
  (parameters
    '("gpointer" "user_data")
  )
)

(define-method get_events
  (of-object "GdkWindow")
  (c-name "gdk_window_get_events")
  (return-type "GdkEventMask")
)

(define-method set_events
  (of-object "GdkWindow")
  (c-name "gdk_window_set_events")
  (return-type "none")
  (parameters
    '("GdkEventMask" "event_mask")
  )
)

(define-method set_device_events
  (of-object "GdkWindow")
  (c-name "gdk_window_set_device_events")
  (return-type "none")
  (parameters
    '("GdkDevice*" "device")
    '("GdkEventMask" "event_mask")
  )
)

(define-method get_device_events
  (of-object "GdkWindow")
  (c-name "gdk_window_get_device_events")
  (return-type "GdkEventMask")
  (parameters
    '("GdkDevice*" "device")
  )
)

(define-method set_icon_list
  (of-object "GdkWindow")
  (c-name "gdk_window_set_icon_list")
  (return-type "none")
  (parameters
    '("GList*" "surfaces")
  )
)

(define-method set_icon_name
  (of-object "GdkWindow")
  (c-name "gdk_window_set_icon_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method set_group
  (of-object "GdkWindow")
  (c-name "gdk_window_set_group")
  (return-type "none")
  (parameters
    '("GdkWindow*" "leader")
  )
)

(define-method get_group
  (of-object "GdkWindow")
  (c-name "gdk_window_get_group")
  (return-type "GdkWindow*")
)

(define-method set_decorations
  (of-object "GdkWindow")
  (c-name "gdk_window_set_decorations")
  (return-type "none")
  (parameters
    '("GdkWMDecoration" "decorations")
  )
)

(define-method get_decorations
  (of-object "GdkWindow")
  (c-name "gdk_window_get_decorations")
  (return-type "gboolean")
  (parameters
    '("GdkWMDecoration*" "decorations")
  )
)

(define-method set_functions
  (of-object "GdkWindow")
  (c-name "gdk_window_set_functions")
  (return-type "none")
  (parameters
    '("GdkWMFunction" "functions")
  )
)

(define-method create_similar_surface
  (of-object "GdkWindow")
  (c-name "gdk_window_create_similar_surface")
  (return-type "cairo_surface_t*")
  (parameters
    '("cairo_content_t" "content")
    '("int" "width")
    '("int" "height")
  )
)

(define-method create_similar_image_surface
  (of-object "GdkWindow")
  (c-name "gdk_window_create_similar_image_surface")
  (return-type "cairo_surface_t*")
  (parameters
    '("cairo_format_t" "format")
    '("int" "width")
    '("int" "height")
    '("int" "scale")
  )
)

(define-method beep
  (of-object "GdkWindow")
  (c-name "gdk_window_beep")
  (return-type "none")
)

(define-method iconify
  (of-object "GdkWindow")
  (c-name "gdk_window_iconify")
  (return-type "none")
)

(define-method deiconify
  (of-object "GdkWindow")
  (c-name "gdk_window_deiconify")
  (return-type "none")
)

(define-method stick
  (of-object "GdkWindow")
  (c-name "gdk_window_stick")
  (return-type "none")
)

(define-method unstick
  (of-object "GdkWindow")
  (c-name "gdk_window_unstick")
  (return-type "none")
)

(define-method maximize
  (of-object "GdkWindow")
  (c-name "gdk_window_maximize")
  (return-type "none")
)

(define-method unmaximize
  (of-object "GdkWindow")
  (c-name "gdk_window_unmaximize")
  (return-type "none")
)

(define-method fullscreen
  (of-object "GdkWindow")
  (c-name "gdk_window_fullscreen")
  (return-type "none")
)

(define-method fullscreen_on_monitor
  (of-object "GdkWindow")
  (c-name "gdk_window_fullscreen_on_monitor")
  (return-type "none")
  (parameters
    '("GdkMonitor*" "monitor")
  )
)

(define-method set_fullscreen_mode
  (of-object "GdkWindow")
  (c-name "gdk_window_set_fullscreen_mode")
  (return-type "none")
  (parameters
    '("GdkFullscreenMode" "mode")
  )
)

(define-method get_fullscreen_mode
  (of-object "GdkWindow")
  (c-name "gdk_window_get_fullscreen_mode")
  (return-type "GdkFullscreenMode")
)

(define-method unfullscreen
  (of-object "GdkWindow")
  (c-name "gdk_window_unfullscreen")
  (return-type "none")
)

(define-method set_keep_above
  (of-object "GdkWindow")
  (c-name "gdk_window_set_keep_above")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method set_keep_below
  (of-object "GdkWindow")
  (c-name "gdk_window_set_keep_below")
  (return-type "none")
  (parameters
    '("gboolean" "setting")
  )
)

(define-method set_opacity
  (of-object "GdkWindow")
  (c-name "gdk_window_set_opacity")
  (return-type "none")
  (parameters
    '("gdouble" "opacity")
  )
)

(define-method register_dnd
  (of-object "GdkWindow")
  (c-name "gdk_window_register_dnd")
  (return-type "none")
)

(define-method begin_resize_drag
  (of-object "GdkWindow")
  (c-name "gdk_window_begin_resize_drag")
  (return-type "none")
  (parameters
    '("GdkWindowEdge" "edge")
    '("gint" "button")
    '("gint" "root_x")
    '("gint" "root_y")
    '("guint32" "timestamp")
  )
)

(define-method begin_resize_drag_for_device
  (of-object "GdkWindow")
  (c-name "gdk_window_begin_resize_drag_for_device")
  (return-type "none")
  (parameters
    '("GdkWindowEdge" "edge")
    '("GdkDevice*" "device")
    '("gint" "button")
    '("gint" "root_x")
    '("gint" "root_y")
    '("guint32" "timestamp")
  )
)

(define-method begin_move_drag
  (of-object "GdkWindow")
  (c-name "gdk_window_begin_move_drag")
  (return-type "none")
  (parameters
    '("gint" "button")
    '("gint" "root_x")
    '("gint" "root_y")
    '("guint32" "timestamp")
  )
)

(define-method begin_move_drag_for_device
  (of-object "GdkWindow")
  (c-name "gdk_window_begin_move_drag_for_device")
  (return-type "none")
  (parameters
    '("GdkDevice*" "device")
    '("gint" "button")
    '("gint" "root_x")
    '("gint" "root_y")
    '("guint32" "timestamp")
  )
)

(define-method invalidate_rect
  (of-object "GdkWindow")
  (c-name "gdk_window_invalidate_rect")
  (return-type "none")
  (parameters
    '("const-GdkRectangle*" "rect")
    '("gboolean" "invalidate_children")
  )
)

(define-method invalidate_region
  (of-object "GdkWindow")
  (c-name "gdk_window_invalidate_region")
  (return-type "none")
  (parameters
    '("const-cairo_region_t*" "region")
    '("gboolean" "invalidate_children")
  )
)

(define-method invalidate_maybe_recurse
  (of-object "GdkWindow")
  (c-name "gdk_window_invalidate_maybe_recurse")
  (return-type "none")
  (parameters
    '("const-cairo_region_t*" "region")
    '("GdkWindowChildFunc" "child_func")
    '("gpointer" "user_data")
  )
)

(define-method get_update_area
  (of-object "GdkWindow")
  (c-name "gdk_window_get_update_area")
  (return-type "cairo_region_t*")
)

(define-method freeze_updates
  (of-object "GdkWindow")
  (c-name "gdk_window_freeze_updates")
  (return-type "none")
)

(define-method thaw_updates
  (of-object "GdkWindow")
  (c-name "gdk_window_thaw_updates")
  (return-type "none")
)

(define-function gdk_window_constrain_size
  (c-name "gdk_window_constrain_size")
  (return-type "none")
  (parameters
    '("GdkGeometry*" "geometry")
    '("GdkWindowHints" "flags")
    '("gint" "width")
    '("gint" "height")
    '("gint*" "new_width")
    '("gint*" "new_height")
  )
)

(define-method set_support_multidevice
  (of-object "GdkWindow")
  (c-name "gdk_window_set_support_multidevice")
  (return-type "none")
  (parameters
    '("gboolean" "support_multidevice")
  )
)

(define-method get_support_multidevice
  (of-object "GdkWindow")
  (c-name "gdk_window_get_support_multidevice")
  (return-type "gboolean")
)

(define-method get_frame_clock
  (of-object "GdkWindow")
  (c-name "gdk_window_get_frame_clock")
  (return-type "GdkFrameClock*")
)

(define-method set_opaque_region
  (of-object "GdkWindow")
  (c-name "gdk_window_set_opaque_region")
  (return-type "none")
  (parameters
    '("cairo_region_t*" "region")
  )
)

(define-method set_shadow_width
  (of-object "GdkWindow")
  (c-name "gdk_window_set_shadow_width")
  (return-type "none")
  (parameters
    '("gint" "left")
    '("gint" "right")
    '("gint" "top")
    '("gint" "bottom")
  )
)

(define-method show_window_menu
  (of-object "GdkWindow")
  (c-name "gdk_window_show_window_menu")
  (return-type "gboolean")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-method create_gl_context
  (of-object "GdkWindow")
  (c-name "gdk_window_create_gl_context")
  (return-type "GdkGLContext*")
  (parameters
    '("GError**" "error")
  )
)

(define-method create_vulkan_context
  (of-object "GdkWindow")
  (c-name "gdk_window_create_vulkan_context")
  (return-type "GdkVulkanContext*")
  (parameters
    '("GError**" "error")
  )
)



;; From gdkwindowimpl.h

(define-function gdk_window_impl_get_type
  (c-name "gdk_window_impl_get_type")
  (return-type "GType")
)



;; From keyname-table.h



;; From gdkconfig.h



;; From gdkenumtypes.h

(define-function gdk_input_source_get_type
  (c-name "gdk_input_source_get_type")
  (return-type "GType")
)

(define-function gdk_input_mode_get_type
  (c-name "gdk_input_mode_get_type")
  (return-type "GType")
)

(define-function gdk_device_type_get_type
  (c-name "gdk_device_type_get_type")
  (return-type "GType")
)

(define-function gdk_device_pad_feature_get_type
  (c-name "gdk_device_pad_feature_get_type")
  (return-type "GType")
)

(define-function gdk_device_tool_type_get_type
  (c-name "gdk_device_tool_type_get_type")
  (return-type "GType")
)

(define-function gdk_drag_action_get_type
  (c-name "gdk_drag_action_get_type")
  (return-type "GType")
)

(define-function gdk_drag_cancel_reason_get_type
  (c-name "gdk_drag_cancel_reason_get_type")
  (return-type "GType")
)

(define-function gdk_filter_return_get_type
  (c-name "gdk_filter_return_get_type")
  (return-type "GType")
)

(define-function gdk_event_type_get_type
  (c-name "gdk_event_type_get_type")
  (return-type "GType")
)

(define-function gdk_touchpad_gesture_phase_get_type
  (c-name "gdk_touchpad_gesture_phase_get_type")
  (return-type "GType")
)

(define-function gdk_scroll_direction_get_type
  (c-name "gdk_scroll_direction_get_type")
  (return-type "GType")
)

(define-function gdk_notify_type_get_type
  (c-name "gdk_notify_type_get_type")
  (return-type "GType")
)

(define-function gdk_crossing_mode_get_type
  (c-name "gdk_crossing_mode_get_type")
  (return-type "GType")
)

(define-function gdk_frame_clock_phase_get_type
  (c-name "gdk_frame_clock_phase_get_type")
  (return-type "GType")
)

(define-function gdk_subpixel_layout_get_type
  (c-name "gdk_subpixel_layout_get_type")
  (return-type "GType")
)

(define-function gdk_seat_capabilities_get_type
  (c-name "gdk_seat_capabilities_get_type")
  (return-type "GType")
)

(define-function gdk_byte_order_get_type
  (c-name "gdk_byte_order_get_type")
  (return-type "GType")
)

(define-function gdk_modifier_type_get_type
  (c-name "gdk_modifier_type_get_type")
  (return-type "GType")
)

(define-function gdk_modifier_intent_get_type
  (c-name "gdk_modifier_intent_get_type")
  (return-type "GType")
)

(define-function gdk_grab_status_get_type
  (c-name "gdk_grab_status_get_type")
  (return-type "GType")
)

(define-function gdk_grab_ownership_get_type
  (c-name "gdk_grab_ownership_get_type")
  (return-type "GType")
)

(define-function gdk_event_mask_get_type
  (c-name "gdk_event_mask_get_type")
  (return-type "GType")
)

(define-function gdk_gl_error_get_type
  (c-name "gdk_gl_error_get_type")
  (return-type "GType")
)

(define-function gdk_vulkan_error_get_type
  (c-name "gdk_vulkan_error_get_type")
  (return-type "GType")
)

(define-function gdk_window_type_hint_get_type
  (c-name "gdk_window_type_hint_get_type")
  (return-type "GType")
)

(define-function gdk_axis_use_get_type
  (c-name "gdk_axis_use_get_type")
  (return-type "GType")
)

(define-function gdk_axis_flags_get_type
  (c-name "gdk_axis_flags_get_type")
  (return-type "GType")
)

(define-function gdk_window_type_get_type
  (c-name "gdk_window_type_get_type")
  (return-type "GType")
)

(define-function gdk_window_hints_get_type
  (c-name "gdk_window_hints_get_type")
  (return-type "GType")
)

(define-function gdk_wm_decoration_get_type
  (c-name "gdk_wm_decoration_get_type")
  (return-type "GType")
)

(define-function gdk_wm_function_get_type
  (c-name "gdk_wm_function_get_type")
  (return-type "GType")
)

(define-function gdk_gravity_get_type
  (c-name "gdk_gravity_get_type")
  (return-type "GType")
)

(define-function gdk_anchor_hints_get_type
  (c-name "gdk_anchor_hints_get_type")
  (return-type "GType")
)

(define-function gdk_window_edge_get_type
  (c-name "gdk_window_edge_get_type")
  (return-type "GType")
)

(define-function gdk_fullscreen_mode_get_type
  (c-name "gdk_fullscreen_mode_get_type")
  (return-type "GType")
)

(define-function gdk_window_state_get_type
  (c-name "gdk_window_state_get_type")
  (return-type "GType")
)



;; From gdkmarshalers.h



;; From gdkresources.h



;; From gdkversionmacros.h


