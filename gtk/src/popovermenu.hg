/* Copyright (C) 2015 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see <http://www.gnu.org/licenses/>.
 */

#include <gtkmm/popover.h>
#include <giomm/menumodel.h>

_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/popover_p.h)

namespace Gtk
{
/** A Popover to use as a menu.
 *
 * %PopoverMenu is a subclass of Popover that treats its
 * childen like menus and allows switching between them. It is
 * meant to be used primarily together with ModelButton, but
 * any widget can be used, such as SpinButton or Scale.
 * In this respect, %PopoverMenu is more flexible than popovers
 * that are created from a Gio::MenuModel.
 *
 * To add a child as a submenu, use add_submenu().
 * To let the user open this submenu, add a ModelButton whose
 * ModelButton::property_menu_name() is set to the name you've given
 * to the submenu.
 *
 * To add a named submenu in a ui file, set Widget::property_name()
 * of the widget that you are adding as a child of the popover menu.
 *
 * By convention, the first child of a submenu should be a ModelButton
 * to switch back to the parent menu. Such a button should use
 * ModelButton::property_inverted() and ModelButton::property_centered()
 * to achieve a title-like appearance and place the submenu indicator
 * at the opposite side. To switch back to the main menu, use "main"
 * as the menu name.
 *
 * @newin{3,18}
 *
 * @ingroup Widgets
 * @ingroup Containers
 * @ingroup Menus
 */
class PopoverMenu : public Popover
{
  _CLASS_GTKOBJECT(PopoverMenu, GtkPopoverMenu, GTK_POPOVER_MENU, Gtk::Popover, GtkPopover)

public:
  /** Creates a new popover menu to point to @a relative_to.
   *
   * @param relative_to The Gtk::Widget the popover menu is related to.
   */
  _WRAP_CTOR(PopoverMenu(const Widget& relative_to{?}), gtk_popover_menu_new)

  //This is custom-implemented because the gtk_popover_menu_new_from_model() does more
  //than just call g_object_new. MenuBar and Menu have both the same issue.
  //See https://bugzilla.gnome.org/show_bug.cgi?id=704671
  /** Creates a %PopoverMenu and populates it according to @a model.
   * The popover menu is pointed to the @a relative_to widget.
   *
   * The created buttons are connected to actions found in the
   * ApplicationWindow to which the popover menu belongs - typically
   * by means of being attached to a widget that is contained within
   * the ApplicationWindow widget hierarchy.
   *
   * Actions can also be added using Widget::insert_action_group()
   * on the menu's attached widget or on any of its parent widgets.
   *
   * @param relative_to Widget the popover menu is related to
   * @param model A Gio::MenuModel
   */
  explicit PopoverMenu(const Widget& relative_to, const Glib::RefPtr<Gio::MenuModel>& model);

  /** Creates a %PopoverMenu and populates it according to @a model.
   *
   * The created buttons are connected to actions found in the
   * ApplicationWindow to which the popover menu belongs - typically
   * by means of being attached to a widget that is contained within
   * the ApplicationWindow widget hierarchy.
   *
   * Actions can also be added using Widget::insert_action_group()
   * on the menu's attached widget or on any of its parent widgets.
   *
   * @param model A Gio::MenuModel
   */
  explicit PopoverMenu(const Glib::RefPtr<Gio::MenuModel>& model);
  _IGNORE(gtk_popover_menu_new_from_model)

  _WRAP_METHOD(void add_submenu(Widget& submenu, const Glib::ustring& name), gtk_popover_menu_add_submenu)
  _WRAP_METHOD(void open_submenu(const Glib::ustring& name), gtk_popover_menu_open_submenu)

  _WRAP_PROPERTY("visible-submenu", Glib::ustring)

  // PopoverMenu has no signals nor vfuncs.
};

} //namespace Gtk
