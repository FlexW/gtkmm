/*
 * Copyright (C) 2003 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

_CONFIGINCLUDE(gtkmmconfig.h)

#include <gtkmm/toolbutton.h>
#include <gtkmm/popover.h>

_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/toolbutton_p.h)

namespace Gtk
{

/** A Gtk::ToolItem containing a toggle button.
 *
 * A MenuToolButton is a Gtk::ToolItem that contains a menu.
 * @ingroup Widgets
 */
class MenuToolButton : public ToolButton
{
  _CLASS_GTKOBJECT(MenuToolButton, GtkMenuToolButton, GTK_MENU_TOOL_BUTTON, Gtk::ToolButton, GtkToolButton)

public:
  /** Creates a new MenuToolButton.
   */
  _CTOR_DEFAULT()

  /** Creates a new MenuToolButton with a label.
   *
   * The MenuToolButton will have the label @a label.
   *
   * @param label The string used to display the label for this MenuToolButton.
   */
  explicit MenuToolButton(const Glib::ustring& label);

  /** Creates a new MenuToolButton with an image.
   *
   * The MenuToolButton will have the label @a label and an image widget @a icon_widget.
   *
   * @param icon_widget The widget placed as the MenuToolButton's icon.
   * @param label The string used to display the label for this MenuToolButton.
   */
  explicit MenuToolButton(Widget& icon_widget, const Glib::ustring& label = {});

  _WRAP_METHOD(void set_popover(Popover& popover), gtk_menu_tool_button_set_popover)
  _WRAP_METHOD(Popover* get_popover(), gtk_menu_tool_button_get_popover)
  _WRAP_METHOD(const Popover* get_popover() const, gtk_menu_tool_button_get_popover, constversion)
  /** Insensitizes the arrow button.
   */
  void unset_popover();

  _WRAP_METHOD(void set_arrow_tooltip_text(const Glib::ustring& text), gtk_menu_tool_button_set_arrow_tooltip_text)
  _WRAP_METHOD(void set_arrow_tooltip_markup(const Glib::ustring& markup), gtk_menu_tool_button_set_arrow_tooltip_markup)

  // no_default_handler because GtkMenuToolButtonClass is private.
  _WRAP_SIGNAL(void show_menu(), show_menu, no_default_handler)

  _WRAP_PROPERTY("popover", Popover*)
};

} // namespace Gtk
