/* Copyright (C) 2015 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see <http://www.gnu.org/licenses/>.
 */

#include <gtkmm/widget.h>
#include <gtkmm/actionable.h>
#include <gtkmm/popover.h>
#include <gtkmm/sizegroup.h>
#include <giomm/icon.h>

_DEFS(gtkmm,gtk)
_PINCLUDE(gtkmm/private/widget_p.h)

namespace Gtk
{
_WRAP_ENUM(ButtonRole, GtkButtonRole)

/** A button that uses a Gio::Action as model.
 *
 * ModelButton is a button class that can use a Gio::Action as its model.
 * In contrast to ToggleButton or RadioButton, which can also
 * be backed by a Gio::Action via Actionable::property_action_name(),
 * ModelButton will adapt its appearance according to the kind of
 * action it is backed by, and appear either as a plain, check or radio button.
 *
 * Model buttons are used with popovers from a menu model bound to the popover.
 * They can also be used manually in a PopoverMenu.
 *
 * When the action is specified via Actionable::property_action_name()
 * and Actionable::property_action_target(), the role of the button
 * (i.e. whether it is a plain, check or radio button) is determined by
 * the type of the action and doesn't have to be explicitly specified
 * with property_role().
 *
 * The content of the button is specified by property_text() and property_icon().
 *
 * The appearance of model buttons can be influenced with
 * property_centered() and property_iconic().
 *
 * Model buttons have built-in support for submenus in PopoverMenu.
 * To make a ModelButton that opens a submenu when activated, set
 * property_menu_name(). To make a button that goes
 * back to the parent menu, you should set property_inverted()
 * to place the submenu indicator at the opposite side.
 *
 * @newin{3,18}
 *
 * @ingroup Widgets
 */
class ModelButton : public Widget, public Actionable
{
  _CLASS_GTKOBJECT(ModelButton, GtkModelButton, GTK_MODEL_BUTTON, Gtk::Widget, GtkWidget)
  _IMPLEMENTS_INTERFACE(Actionable)

public:
  _CTOR_DEFAULT

  _WRAP_PROPERTY("role", ButtonRole)
  _WRAP_PROPERTY("icon", Glib::RefPtr<Gio::Icon>)
  _WRAP_PROPERTY("text", Glib::ustring)
  _WRAP_PROPERTY("use-markup", bool, newin "3,96")
  _WRAP_PROPERTY("active", bool)
  _WRAP_PROPERTY("menu-name", Glib::ustring)
  _WRAP_PROPERTY("popover", Popover*)
  _WRAP_PROPERTY("iconic", bool)
  _WRAP_PROPERTY("accel", Glib::ustring)
  _WRAP_PROPERTY("indicator-size-group", Glib::RefPtr<SizeGroup>)

  // no_default_handler because the wrapped C signal has no default handler.
  _WRAP_SIGNAL(void clicked(), "clicked", no_default_handler)

  // ModelButton has no methods nor vfuncs.
};

} //namespace Gtk
